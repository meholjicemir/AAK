var AppPath = window.location.href.split("?")[0].toLowerCase().replace("/desk.aspx", "").replace(/#/g, "") + "/", CurrentModule = "home", CurrentGoogleDocSelection = null, CurrentUser = null, CurrentCodeTable = null, Sudovi = null, Labels = null, Lica = null, Predmeti = null, Users = null, CaseActivities = null, Radnje = null, CurrentCase = null, SelectedCases = [], CaseDocumentClipboard = null, DownloadButtonMarkUp = "<button class='btn btn-default btn-sm' data-toggle='tooltip' title='##TOOLTIP##' onclick='##ON_CLICK##' style='color:blue;'><span class='glyphicon glyphicon-cloud-download'></span></button>", _columnsCases = [{ field: "Id" }, { checkbox: !0 }, { field: "NasBrojName", title: "NB", titleTooltip: "Naš broj", sortable: !0, sorter: NasBrojSorterFunction, width: "50px" }, { field: "StrankaNasa", title: "Naša stranka", titleTooltip: "Naša stranka", sortable: !0 }, { field: "StrankaProtivna", title: "Protivna stranka", titleTooltip: "Protivna stranka", sortable: !0 }, { field: "VrstaPredmetaName", title: "Vrsta predmeta", titleTooltip: "Vrsta predmeta", sortable: !0 }, { field: "BrojPredmeta", title: "Broj predmeta", titleTooltip: "Broj predmeta", sortable: !0 }, { field: "SudName", title: "Sud", titleTooltip: "Sud", sortable: !0 }, { field: "StanjePredmetaName", title: "Stanje predmeta", titleTooltip: "Stanje predmeta", sortable: !0 }, { field: "DatumStanjaPredmeta", title: "Datum stanja", titleTooltip: "Datum stanja", sortable: !0, sorter: DateSorterFunction, visible: !1 }, { field: "KategorijaPredmetaName", title: "Kategorija", titleTooltip: "Kategorija", sortable: !0 }, { field: "Labels", title: "Oznake", titleTooltip: "Oznake", sortable: !1, visible: !1 }, { field: "SudijaName", title: "Sudija", titleTooltip: "Sudija", sortable: !0, visible: !1 }, { field: "Iniciran", title: "Iniciran", titleTooltip: "Iniciran", sortable: !0, sorter: DateSorterFunction, visible: !1 }, { field: "VrijednostSporaString", title: "Vrijednost spora", titleTooltip: "Vrijednost spora", sortable: !0, align: "right", visible: !1 }, { field: "UlogaName", title: "Uloga", titleTooltip: "Uloga", sortable: !0, visible: !1 }, { field: "PrivremeniZastupniciString", title: "Pr. zast.", titleTooltip: "Privremeni zastupnici", sortable: !0, visible: !1 }, { field: "PristupPredmetuString", title: "Pristup putem Interneta", titleTooltip: "Pristup predmetu putem interneta", sortable: !0, visible: !1 }, { field: "PravniOsnov", title: "Pravni osnov", titleTooltip: "Pravni osnov", sortable: !0, visible: !1 }, { field: "NacinOkoncanjaName", title: "Način okončanja", titleTooltip: "Način okončanja", sortable: !0, visible: !1 }, { field: "Uspjeh", title: "Uspjeh", titleTooltip: "Uspjeh", sortable: !0, visible: !1 }, { field: "DatumArhiviranja", title: "Datum arhiviranja", titleTooltip: "Datum arhiviranja", sortable: !0, sorter: DateSorterFunction, visible: !1 }, { field: "BrojArhiveTotal", title: "Br. arh/reg", titleTooltip: "Broj u arhivi / registrator", sortable: !0, visible: !1 }]; function ValidateUser(e, t, a) { ShowLoaderCenter(), $.post(AppPath + "api/user", { Email: e, Token: t }).done(function (e) { e.Id > 0 ? (SetupHistoryHandling(), CurrentUser = { Id: e.Id, Email: e.Email, UserGroupCodes: e.UserGroupCodes, FirstName: e.FirstName, LastName: e.LastName, PictureLink: e.PictureLink, Token: e.Token, AccessToken: a }, $("#imgUserPicture").attr("title", CurrentUser.FirstName + " " + CurrentUser.LastName + " (" + CurrentUser.Email + ")").attr("alt", CurrentUser.FirstName + " " + CurrentUser.LastName), null != CurrentUser.PictureLink && null != CurrentUser.PictureLink && CurrentUser.PictureLink.length > 0 && $("#imgUserPicture").attr("src", CurrentUser.PictureLink), $("#imgUserPicture").show(), RenderApp(e), HideLoaderCenter()) : (HideLoaderCenter(), ShowAlert("danger", "Prijava nije uspjela.", !0, void 0, $("#divGoogleSignInAlert"))) }).fail(function (e) { 403 == e.status ? ShowAlert("danger", "Prijava nije uspjela.", !0, void 0, $("#divGoogleSignInAlert")) : ShowAlert("danger", "Greška prilikom prijave. Probajte ponovo ili kontaktirajte administratora.", !0, void 0, $("#divGoogleSignInAlert")), ShowAlert("danger", "Prijava nije uspjela."), HideLoaderCenter() }) } function RenderApp(e) { $("#divGoogleSignIn").hide(); var t = GetQueryStringParameterByName("module"), a = !1, n = !1; e.UserGroupCodes.indexOf("office_admin") >= 0 || e.UserGroupCodes.indexOf("office_reader") >= 0 ? ($("#liMenuHome").show(), $("#liMenuCases").show(), $("#liMenuParties").show(), $("#liMenuReports").show(), $("#liMenuSudovi").show(), $("#liMenuLabels").show(), $("#liMenuCodeTables").show(), a = !0) : ($("#liMenuHome").hide(), $("#liMenuCases").hide(), $("#liMenuSudovi").hide(), $("#liMenuParties").hide(), $("#liMenuReports").hide(), $("#liMenuLabels").hide(), $("#liMenuCodeTables").hide()), -1 == e.UserGroupCodes.indexOf("office_admin") ? $(".only-office-admin").hide() : $(".only-office-admin").show(), e.UserGroupCodes.indexOf("user_admin") >= 0 ? ($("#liMenuUsers").show(), n = !0) : $("#liMenuUsers").hide(), $("#divAll").show(), a ? (CurrentModule = (t || "").toLowerCase(), OpenMenuByModule()) : n ? (CurrentModule = "users", MenuUsers()) : ShowAlert("danger", "Korisnik postoji ali nema dodijeljena potrebna prava za korištenje aplikacije."), $("#dateTimePicker_Iniciran,#dateTimePicker_DatumStanjaPredmeta,#dateTimePicker_DatumArhiviranja,#dateTimePicker_NoteDate,#dateTimePicker_ExpenseDate,#dateTimePicker_CaseActivity_ActivityDate,#dateTimePicker_Search_DatumStanjaPredmeta,#dateTimePicker_Search_IniciranFrom,#dateTimePicker_Search_IniciranTo,#dateTimePicker_Search_ArhiviranFrom,#dateTimePicker_Search_ArhiviranTo").datetimepicker({ format: "DD.MM.YYYY", showTodayButton: !0 }), $("#dateTimePicker_Radnja_DatumRadnje").datetimepicker({ format: "DD.MM.YYYY HH:mm", showTodayButton: !0 }), window.innerWidth > 1240 && $(".modal-admin").css("margin-left", ((window.innerWidth - 1240) / 2).toString() + "px"), SetMenuLocation() } function OpenMenuByModule() { switch (CurrentModule) { case "home": MenuHome(); break; case "cases": MenuCases(); break; case "parties": MenuParties(); break; case "courts": MenuSudovi(); break; case "labels": MenuLabels(); break; case "users": CurrentUser.UserGroupCodes.indexOf("user_admin") >= 0 ? MenuUsers() : MenuHome(); break; case "advanced_search": MenuReports(); break; default: $("#liMenuCodeTables").find("a").each(function (e, t) { if ($(t).html().toLowerCase() == CurrentModule) return $(t).click(), !1; e == $("#liMenuCodeTables").find("a").length - 1 && (CurrentModule = "home", MenuHome()) }) } } function MenuHome() { CurrentModule = "home"; var e = document.location.href.split("?")[0] + "?module=" + CurrentModule; history.pushState({ foo: "bar" }, "Početna", e), DeactivateAllMenuItems(), $("#liMenuHome").addClass("active"), $(".menu-div").hide(), $("#divHome").show(), LoadCaseActivities(), LoadRadnje(), LoadLabels(!0, !1) } function LoadRadnje() { ShowLoaderCenter(); var e = [{ field: "PredmetId" }, { field: "Color" }, { field: "VrstaRadnjeName_DatumRadnje", title: "Vrsta radnje / Datum", titleTooltip: "Vrsta radnje / Datum", width: "150px" }, { field: "CaseNasBroj_CaseFullName_Biljeska", title: "Predmet / Bilješka", titleTooltip: "Predmet / Bilješka" }]; $("#tblRadnje").bootstrapTable("destroy"); var t = new Date((new Date).setHours(0, 0, 0, 0)), a = new Date((new Date).setHours(0, 0, 0, 0)); a.setDate(a.getDate() + 1), $.get(AppPath + "api/radnjahome", { UserId: CurrentUser.Id, Filter: $("#txtRadnjeFilter").val(), RowCount: $("#ddlRadnjeRowCount").val(), Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (n) { null != n && n.length > 0 ? (Radnje = n, $(n).each(function (o, r) { new Date(r.DatumRadnje).setHours(0, 0, 0, 0) === Date.parse(a) ? r.Color = "#00b6ee" : new Date(r.DatumRadnje).setHours(0, 0, 0, 0) === Date.parse(t) ? r.Color = "#21b04b" : r.Color = "white", Date.parse(r.DatumRadnje) && (r.DatumRadnje = moment(r.DatumRadnje).format("DD.MM.YYYY HH:mm")), r.DatumRadnje = r.DatumRadnje.replace(" 00:00", ""), r.VrstaRadnjeName_DatumRadnje = "<strong style='text-decoration:underline;'>" + r.VrstaRadnjeName + "</strong><br>" + (r.DatumRadnje || ""), r.CaseNasBroj_CaseFullName_Biljeska = "<strong>" + r.CaseFullName + "</strong><br><strong style='font-style: italic;'>" + r.Biljeske + "</strong>", o == n.length - 1 && ($("#tblRadnje").bootstrapTable({ data: n, columns: e, showHeader: !0, escape: !1, onPostBody: function () { return AfterBindRadnje(), !1 } }), HideLoaderCenter()) })) : ($("#tblRadnje").bootstrapTable({ data: [], striped: !0, showColumns: !0, columns: e, escape: !1 }), HideLoaderCenter()) }).fail(function (e, t, a) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom učitavanja radnji. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() }) } function AfterBindRadnje() { $("#tblRadnje").find("tr").each(function (e, t) { if (0 == e) $(t).css("background-color", "#eee"), $(t).find("th:first-child").hide(), $(t).find("th:nth-child(2)").hide(); else if (Radnje.length > 0) { var a = parseInt($(t).find("td:first-child").html()), n = $(t).find("td:nth-child(2)").html(); switch ($(t).find("td:first-child").hide(), $(t).find("td:nth-child(2)").hide(), n) { case "white": break; default: $(t).css("background-color", n).css("color", "white"), $(t).find("td:nth-child(3)").css("font-weight", "bold"), $(t).find("td:nth-child(4)").css("font-weight", "bold"), $(t).find("td:nth-child(7)").css("font-weight", "bold") }$(t).dblclick(function () { Predmeti = null, EditCase(a) }) } }) } function LoadCaseActivities() { ShowLoaderCenter(); var e = [{ field: "Id" }, { field: "Color" }, { field: "CaseId" }, { field: "ActivityDate", title: "Za datum", titleTooltip: "Za datum", sortable: !1, sorter: DateSorterFunction, width: "100px", class: "bold" }, { field: "CaseFullName", title: "Predmet", titleTooltip: "Predmet", sortable: !1, class: "bold" }, { field: "BrojPredmeta", title: "Broj predmeta", titleTooltip: "Broj predmeta", sortable: !1, visible: !1 }, { field: "KategorijaPredmeta", title: "Kategorija", titleTooltip: "Kategorija", sortable: !1 }, { field: "Note", title: "Bilješka", titleTooltip: "Bilješka", sortable: !1 }, { field: "ForAllUsersString", title: "Vidljivo svima", titleTooltip: "Vidljivo svima", sortable: !1, visible: !1 }]; $("#tblCaseActivities").bootstrapTable("destroy"); var t = new Date((new Date).setHours(0, 0, 0, 0)), a = new Date((new Date).setHours(0, 0, 0, 0)); a.setDate(a.getDate() + 1), $.get(AppPath + "api/caseactivity", { UserId: CurrentUser.Id, Filter: $("#txtCaseActivitiesFilter").val(), RowCount: $("#ddlCaseActivitiesRowCount").val(), Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (n) { null != n && n.length > 0 ? (CaseActivities = n, $(n).each(function (o, r) { r.ForAllUsersString = !0 === r.ForAllUsers ? "Da" : "Ne", Date.parse(r.ActivityDate) === Date.parse(a) ? r.Color = "#00b6ee" : Date.parse(r.ActivityDate) === Date.parse(t) ? r.Color = "#21b04b" : Date.parse(r.ActivityDate) < Date.parse(t) ? r.Color = "#ff0000" : r.Color = "white", Date.parse(r.ActivityDate) && (r.ActivityDate = moment(r.ActivityDate).format("DD.MM.YYYY")), o == n.length - 1 && ($("#tblCaseActivities").bootstrapTable({ data: n, showColumns: !0, columns: e, escape: !1, onPostBody: function () { return AfterBindCaseActivities(), !1 } }), HideLoaderCenter()) })) : ($("#tblCaseActivities").bootstrapTable({ data: [], striped: !0, showColumns: !0, columns: e, escape: !1 }), HideLoaderCenter()) }).fail(function (e, t, a) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom učitavanja pozvanih predmeta. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() }) } function AfterBindCaseActivities() { $("#tblCaseActivities").find("tr").each(function (e, t) { if (0 == e) $(t).css("background-color", "#eee"), $(t).find("th:first-child").hide(), $(t).find("th:nth-child(2)").hide(), $(t).find("th:nth-child(3)").hide(), CurrentUser.UserGroupCodes.indexOf("office_admin") >= 0 && 0 == $("#caseActivitiesEmptyHeader").length && $(t).append("<th id='caseActivitiesEmptyHeader'></th>"); else if (CaseActivities.length > 0) { var a = parseInt($(t).find("td:first-child").html()), n = $(t).find("td:nth-child(2)").html(), o = parseInt($(t).find("td:nth-child(3)").html()); switch ($(t).find("td:first-child").hide(), $(t).find("td:nth-child(2)").hide(), $(t).find("td:nth-child(3)").hide(), n) { case "white": break; default: $(t).css("background-color", n).css("color", "white") }if (CurrentUser.UserGroupCodes.indexOf("office_admin") >= 0) { var r = "<td style='width: 50px;'><div class='btn-group pull-right'>"; r += "<button class='btn btn-default btn-sm custom-table-button-check' data-toggle='tooltip' title='Završeno / Izbriši' onclick='DeleteCaseActivity(" + a.toString() + "); return false;'><span class='glyphicon glyphicon-ok'></span></button>", r += "</div></td>", $(t).append(r) } $(t).dblclick(function () { Predmeti = null, EditCase(o) }) } }) } function DeleteCaseActivity(e) { $(CaseActivities).each(function (t, a) { if (a.Id == e) return ShowPrompt("Da li ste sigurni da želite izbrisati stavku pozvanih predmeta?", "Ovo znači da se više neće pokazivati te da je navedeni zadatak završen.", function () { ShowLoaderCenter(), $.ajax({ url: AppPath + "api/caseactivitydelete?Id=" + e.toString() + "&Token=" + CurrentUser.Token + "&Email=" + CurrentUser.Email, type: "GET", success: function () { LoadCaseActivities(), HideLoaderCenter(), ShowAlert("success", "Uspješno izbrisano.") }, error: function (e) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom brisanja stavke pozvanih predmeta. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() } }) }, function () { }), !1 }) } window.userInteractionTimeout = null, window.userInteractionInHTMLArea = !1, window.onBrowserHistoryButtonClicked = function () { var e = window.location.toString(); if (null != (CurrentModule = GetQueryStringParameterByName("module", e).toLowerCase()) && null != CurrentModule && CurrentModule.length > 0) try { OpenMenuByModule() } catch (e) { } }; var menuCases_DataLoadingCounter = 0; function MenuCases_LoadDataOnly(e) { if (0 === menuCases_DataLoadingCounter) { menuCases_DataLoadingCounter += 10, LoadCodeTableData("vLica_Id_Naziv", $("#ddlCase_Lice"), "Naziv", function () { menuCases_DataLoadingCounter-- }), LoadCodeTableData("KategorijePredmeta", $("#ddlCase_Kategorija"), void 0, function () { menuCases_DataLoadingCounter-- }), LoadCodeTableData("Sudovi", $("#ddlCase_Sud"), "Sud", function () { menuCases_DataLoadingCounter-- }), LoadCodeTableData("Sudije", $("#ddlCase_Sudija"), void 0, function () { menuCases_DataLoadingCounter-- }), LoadCodeTableData("Uloge", $("#ddlCase_Uloga"), void 0, function () { menuCases_DataLoadingCounter-- }), LoadCodeTableData("Uloge", $("#ddlCase_UlogaLica"), void 0, function () { menuCases_DataLoadingCounter-- }), LoadCodeTableData("VrstePredmeta", $("#ddlCase_VrstaPredmeta"), void 0, function () { menuCases_DataLoadingCounter-- }), LoadCodeTableData("NaciniOkoncanja", $("#ddlCase_NacinOkoncanja"), void 0, function () { menuCases_DataLoadingCounter-- }), LoadCodeTableData("VrsteTroskova", $("#ddlCase_ExpenseVrstaTroska"), void 0, function () { menuCases_DataLoadingCounter-- }), LoadCodeTableData("VrsteRadnji", $("#ddlCase_Radnja_VrstaRadnje"), void 0, function () { menuCases_DataLoadingCounter-- }), SetUpStanjeAutocomplete(), SetUpPredatoUzAutocomplete(), SetUpCaseConnectionAutocomplete(), SetUpTipDokumentaAutocomplete(), $("#ddlCase_Kategorija").html("<option>-----</option>"), $("#ddlCase_Uspjeh").html('<option value="" selected="selected"></option>'); for (var t = 0; t <= 100; t++)$("#ddlCase_Uspjeh").append($("<option " + (0 == t ? "selected='selected'" : "") + "></option>").attr("value", t.toString() + "%").text(t.toString() + "%")) } null != e && e() } function MenuCases() { CurrentModule = "cases"; var e = document.location.href.split("?")[0] + "?module=" + CurrentModule; history.pushState({ foo: "bar" }, "Predmeti", e), DeactivateAllMenuItems(), $("#liMenuCases").addClass("active"), $(".menu-div").hide(), $("#divCases").show(), SelectedCases = [], MenuCases_LoadDataOnly(), LoadLabels(!0) } function ApplyLabel(e, t) { ShowLoaderCenter(); var a = ""; switch (e) { case "case": if (!0 === t) a = $("#modalCase").attr("edit_id"); else for (var n = 0; n < SelectedCases.length; n++)a += SelectedCases[n].Id.toString() + ","; break; default: return void ShowAlert("danger", "Problem pri dodavanju oznake.") }var o = { LabelId: !0 === t ? $("#ddlCase_Labels").val() : $("#ddlLabels").val(), ContentType: e, ContentIds: a, Token: CurrentUser.Token, Email: CurrentUser.Email }; $.post(AppPath + "api/labelConnection", o).done(function (a) { a ? ($(a).each(function (a, n) { switch (e) { case "case": for (var o = 0; o < Predmeti.length; o++)if (Predmeti[o].Id == n.ContentId) { if (Predmeti[o].LabelIds && Predmeti[o].LabelIds.length > 0) { var r = Predmeti[o].LabelIds.split(","); -1 == r.indexOf(n.LabelId.toString()) && (r.push(n.LabelId.toString()), r.sort(), Predmeti[o].LabelIds = r.join()) } else Predmeti[o].LabelIds = n.LabelId.toString(); $("span[name='spanContentLabels_" + e + "_" + n.ContentId.toString() + "']").html(BuildLabelsHTML(Predmeti[o].LabelIds, e, n.ContentId, t)); break } break; default: return void ShowAlert("danger", "Problem pri dodavanju oznake.") } }), $("#ddlLabels").val(""), SelectedCases = [], $("#tblCases").find("input[type='checkbox']").each(function (e, t) { $(t).prop("checked") && $(t).trigger("click") }), $("#divOznake").hide(), HideLoaderCenter()) : (HideLoaderCenter(), ShowAlert("danger", "Problem pri dodavanju oznake.")) }).fail(function (e) { 403 == jqXHR.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom dodavanja oznake. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() }) } function DeleteLabelConnection(e, t, a, n) { ShowLoaderCenter(), $.ajax({ url: AppPath + "api/labelConnectiondelete?LabelId=" + t.toString() + "&ContentType=" + a + "&ContentId=" + n.toString() + "&Token=" + CurrentUser.Token + "&Email=" + CurrentUser.Email, type: "GET", success: function () { for (var a = 0; a < Predmeti.length; a++)if (Predmeti[a].Id == n) { var o = Predmeti[a].LabelIds.split(","); o.splice(o.indexOf(t.toString()), 1), o.sort(), Predmeti[a].LabelIds = o.join(); break } $(e).parent().next().remove(), $(e).parent().remove(), HideLoaderCenter() }, error: function (e) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom brisanja oznake. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() } }) } function LoadCases(e, t, a, n) { ShowLoaderCenter(), null != a && null != a && a.length > 0 && ($("#txtCasesFilter").val(a), $("#txtCasesFilterNasBroj").val("")), $("#tblCases").bootstrapTable("destroy"), null == e && (e = null), null != e && $("#txtCasesFilterNasBroj").val(""), $.get(AppPath + "api/predmet", { UserId: CurrentUser.Id, Filter: $("#txtCasesFilter").val(), FilterNasBroj: $("#txtCasesFilterNasBroj").val(), RowCount: $("#ddlCasesRowCount").val(), CaseId: e, Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (e) { null != e && e.length > 0 ? (Predmeti = e, $(e).each(function (a, o) { switch (Date.parse(o.Iniciran) && (o.Iniciran = moment(o.Iniciran).format("DD.MM.YYYY")), Date.parse(o.DatumStanjaPredmeta) && (o.DatumStanjaPredmeta = moment(o.DatumStanjaPredmeta).format("DD.MM.YYYY")), Date.parse(o.SkontroDatum) && (o.SkontroDatum = moment(o.SkontroDatum).format("DD.MM.YYYY")), Date.parse(o.DatumArhiviranja) && (o.DatumArhiviranja = moment(o.DatumArhiviranja).format("DD.MM.YYYY")), null != o.VrijednostSpora && (o.VrijednostSporaString = GetMoneyFormat(o.VrijednostSpora)), o.PrivremeniZastupniciString = o.PrivremeniZastupnici ? "Da" : "Ne", o.PristupPredmetuString = o.PristupPredmetu ? "Da" : "Ne", o.NasBrojName = "<strong>" + o.NasBroj + "</strong>", null != Labels && (o.Labels = BuildLabelsHTML(o.LabelIds, "case", o.Id)), o.KategorijaPredmetaId) { case 5: o.KategorijaPredmetaName = "<span style='color: #00b6ee; font-weight: bold;'>" + o.KategorijaPredmetaName + "</span>"; break; case 8: o.KategorijaPredmetaName = "<span style='color: #ff0000; font-weight: bold;'>" + o.KategorijaPredmetaName + "</span>"; break; case 10: o.KategorijaPredmetaName = "<span style='color: #21b04b; font-weight: bold;'>" + o.KategorijaPredmetaName + "</span>"; break; default: o.KategorijaPredmetaName = "<span style='color: black; font-weight: bold;'>" + o.KategorijaPredmetaName + "</span>" }a == e.length - 1 && ($("#tblCases").bootstrapTable({ data: e, striped: !0, showColumns: !0, columns: _columnsCases, escape: !1, clickToSelect: !1, onPostBody: function () { return AfterBindCases(), !0 !== n && null != $("#txtCasesFilterNasBroj").val() && "" != $("#txtCasesFilterNasBroj").val() ? EditCase(e[0].Id) : null != t && "function" == typeof t && t(), !1 }, onCheck: function (e, t) { SelectedCases.push(e), $("#divOznake").show() }, onUncheck: function (e, t) { $(SelectedCases).each(function (t, a) { if (a.Id == e.Id) return SelectedCases.splice(t, 1), 0 == SelectedCases.length && $("#divOznake").hide(), !1 }) }, onCheckAll: function (e) { $(Predmeti).each(function (e, t) { SelectedCases.push(t) }), $("#divOznake").show() }, onUncheckAll: function (e) { SelectedCases = [], $("#divOznake").hide() } }), HideLoaderCenter()) })) : ($("#tblCases").bootstrapTable({ data: [], striped: !0, showColumns: !0, columns: _columnsCases, escape: !1 }), HideLoaderCenter()) }).fail(function (e, t, a) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom učitavanja predmeta. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() }) } function AfterBindCases() { $("#tblCases").find("tr").each(function (e, t) { if (0 == e) $(t).find("th:first-child").hide(), 0 == $("#casesEmptyHeader").length && $(t).append("<th id='casesEmptyHeader'></th>"); else { var a = parseInt($(t).find("td:first-child").html()); $(t).find("td:first-child").hide(); var n = "<td style='width: 120px;'><div class='btn-group pull-right'>"; n += "<button class='btn btn-default btn-sm custom-table-button-edit' data-toggle='tooltip' title='Pregledaj / izmijeni podatke o predmetu' onclick='EditCase(" + a.toString() + "); return false;'><span class='glyphicon glyphicon-pencil'></span></button>", n += "<button class='btn btn-default btn-sm custom-table-button-template' data-toggle='tooltip' title='Generiši dokument iz predloška' onclick='GenerateTemplateForCase(" + a.toString() + "); return false;'><span class='glyphicon glyphicon-file'></span></button>", CurrentUser.UserGroupCodes.indexOf("office_admin") >= 0 && (n += "<button class='btn btn-default btn-sm custom-table-button-delete' data-toggle='tooltip' title='Izbriši predmet' onclick='DeleteCase(" + a.toString() + "); return false;'><span class='glyphicon glyphicon-remove'></span></button>"), n += "</div></td>", $(t).append(n), $(t).dblclick(function () { EditCase(a) }) } }) } function DeleteCase(e) { $(Predmeti).each(function (t, a) { if (a.Id == e) return ShowPrompt("Da li ste sigurni da želite izbrisati predmet?", "<span style='font-style: italic; color: gray;'>" + a.NasBroj + "</span>", function () { ShowLoaderCenter(), $.ajax({ url: AppPath + "api/predmetdelete?Id=" + e.toString() + "&Token=" + CurrentUser.Token + "&Email=" + CurrentUser.Email, type: "GET", success: function () { LoadCases(), HideLoaderCenter(), ShowAlert("success", "Uspješno izbrisan predmet.") }, error: function () { HideLoaderCenter(), ShowAlert("danger", "Greška pri brisanju predmeta.") } }) }, function () { }), !1 }) } function MenuReports() { CurrentModule = "advanced_search"; var e = document.location.href.split("?")[0] + "?module=" + CurrentModule; history.pushState({ foo: "bar" }, "Napredna pretraga", e), DeactivateAllMenuItems(), $("#liMenuReports").addClass("active"), $(".menu-div").hide(), $("#divReports").show(), LoadCodeTableData("KategorijePredmeta", $("#ddlCase_Search_Kategorija"), void 0, function () { SetMultiSelect($("#ddlCase_Search_Kategorija"), "Sve kategorije", !1) }), LoadCodeTableData("Sudovi", $("#ddlCase_Search_Sud"), "Sud", function () { SetMultiSelect($("#ddlCase_Search_Sud"), "Svi sudovi", !1) }), LoadCodeTableData("Sudije", $("#ddlCase_Search_Sudija"), void 0, function () { SetMultiSelect($("#ddlCase_Search_Sudija"), "Sve sudije", !1) }), LoadCodeTableData("Uloge", $("#ddlCase_Search_Uloga"), void 0, function () { SetMultiSelect($("#ddlCase_Search_Uloga"), "Sve uloge", !1) }), LoadCodeTableData("VrstePredmeta", $("#ddlCase_Search_VrstaPredmeta"), void 0, function () { SetMultiSelect($("#ddlCase_Search_VrstaPredmeta"), "Sve vrste predmeta", !1) }), LoadLabels(!1, !0), $("#ddlCase_Search_UspjehFrom").html(""), $("#ddlCase_Search_UspjehTo").html(""); for (var t = 0; t <= 100; t++)$("#ddlCase_Search_UspjehFrom").append($("<option " + (0 == t ? "selected='selected'" : "") + "></option>").attr("value", t.toString() + "%").text(t.toString() + "%")), $("#ddlCase_Search_UspjehTo").append($("<option " + (0 == t ? "selected='selected'" : "") + "></option>").attr("value", t.toString() + "%").text(t.toString() + "%")); $("#ddlCase_Search_UspjehFrom").val("0%"), $("#ddlCase_Search_UspjehTo").val("100%") } function MenuParties() { var e = GetQueryStringParameterByName("party_id"); CurrentModule = "parties"; var t = document.location.href.split("?")[0] + "?module=" + CurrentModule; null != e && null != e && (t += "&party_id=" + e), history.pushState({ foo: "bar" }, "Stranke", t), DeactivateAllMenuItems(), $("#liMenuParties").addClass("active"), $(".menu-div").hide(), $("#divParties").show(), LoadCodeTableData("Drzave", $("#ddlParty_Drzava")), LoadParties(e) } function LoadParties(e) { ShowLoaderCenter(); var t = [{ field: "Id" }, { field: "Naziv", title: "Ime / Naziv", titleTooltip: "Ime / Naziv", sortable: !0, class: "bold" }, { field: "Ime", title: "Ime", titleTooltip: "Ime", sortable: !0, visible: !1 }, { field: "Prezime", title: "Prezime", titleTooltip: "Prezime", sortable: !0, visible: !1 }, { field: "PravnoLice", title: "Pravno lice", titleTooltip: "Pravno lice", sortable: !0, visible: !1 }, { field: "Adresa", title: "Adresa", titleTooltip: "Adresa", sortable: !0 }, { field: "Grad", title: "Grad", titleTooltip: "Grad", sortable: !0 }, { field: "PostanskiBroj", title: "Poštanski broj", titleTooltip: "Poštanski broj", sortable: !0, align: "right", visible: !1 }, { field: "DrzavaName", title: "Država", titleTooltip: "Država", sortable: !0, visible: !1 }, { field: "Telefon", title: "Telefon", titleTooltip: "Telefon", sortable: !0 }, { field: "Fax", title: "Fax", titleTooltip: "Fax", sortable: !0 }, { field: "Email", title: "Email", titleTooltip: "Email", sortable: !0 }, { field: "IsMinorString", title: "Malodobno lice", titleTooltip: "Malodobno lice", sortable: !0, visible: !1 }, { field: "ZakonskiZastupnik", title: "Zakonski zastupnik", titleTooltip: "Zakonski zastupnik", sortable: !0, visible: !1 }, { field: "JMBG_IDBroj", title: "JMBG / ID broj", titleTooltip: "JMBG / ID broj", sortable: !0, visible: !1 }, { field: "CreatedByName", title: "Kreirao/la", titleTooltip: "Kreirao/la", sortable: !0, visible: !1 }, { field: "Created", title: "Datum kreiranja", titleTooltip: "Datum kreiranja", sortable: !0, sorter: DateSorterFunction, visible: !1 }, { field: "ModifiedByName", title: "Izmijenio/la", titleTooltip: "Izmijenio/la", sortable: !0, visible: !1 }, { field: "Modified", title: "Datum zadnje izmjene", titleTooltip: "Datum zadnje izmjene", sortable: !0, sorter: DateSorterFunction, visible: !1 }]; $("#tblParties").bootstrapTable("destroy"), $.get(AppPath + "api/lice", { UserId: CurrentUser.Id, Filter: $("#txtPartiesFilter").val(), RowCount: $("#ddlPartiesRowCount").val(), PartyId: null != e && null != e ? e : null, Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (a) { null != a && a.length > 0 ? (Lica = a, $(a).each(function (n, o) { Date.parse(o.Created) && (o.Created = moment(o.Created).format("DD.MM.YYYY")), Date.parse(o.Modified) && (o.Modified = moment(o.Modified).format("DD.MM.YYYY")), o.IsMinorString = o.IsMinor ? "Da" : "Ne", n == a.length - 1 && ($("#tblParties").bootstrapTable({ data: a, striped: !0, showColumns: !0, columns: t, onPostBody: function () { return AfterBindParties(e), !1 } }), HideLoaderCenter()) })) : ($("#tblParties").bootstrapTable({ data: [], striped: !0, showColumns: !0, columns: t }), HideLoaderCenter()) }).fail(function (e, t, a) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom učitavanja stranki. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() }) } function AfterBindParties(e) { $("#tblParties").find("tr").each(function (t, a) { if (0 == t) $(a).find("th:first-child").hide(), CurrentUser.UserGroupCodes.indexOf("office_admin") >= 0 && 0 == $("#partiesEmptyHeader").length && $(a).append("<th id='partiesEmptyHeader'></th>"); else { var n = parseInt($(a).find("td:first-child").html()); if ($(a).find("td:first-child").hide(), CurrentUser.UserGroupCodes.indexOf("office_admin") >= 0) { var o = "<td style='width: 100px;'><div class='btn-group pull-right'>"; o += "<button class='btn btn-default btn-sm custom-table-button-edit' data-toggle='tooltip' title='Izmijeni podatke o stranci' onclick='EditParty(" + n.toString() + "); return false;'><span class='glyphicon glyphicon-pencil'></span></button>", o += "<button class='btn btn-default btn-sm custom-table-button-delete' data-toggle='tooltip' title='Izbriši stranku' onclick='DeleteParty(" + n.toString() + "); return false;'><span class='glyphicon glyphicon-remove'></span></button>", o += "</div></td>", $(a).append(o) } $(a).dblclick(function () { EditParty(n) }), e == n && $(a).dblclick() } }) } function MenuUsers() { CurrentModule = "users"; var e = document.location.href.split("?")[0] + "?module=" + CurrentModule; history.pushState({ foo: "bar" }, "Korisnici", e), DeactivateAllMenuItems(), $("#liMenuUsers").addClass("active"), $(".menu-div").hide(), $("#divUsers").show(), LoadUserGroups(), LoadUsers() } function LoadUsers() { ShowLoaderCenter(); var e = [{ field: "Id" }, { field: "Email", title: "Email adresa", titleTooltip: "Email adresa", sortable: !0 }, { field: "FirstName", title: "Ime", titleTooltip: "Ime", sortable: !0 }, { field: "LastName", title: "Prezime", titleTooltip: "Prezime", sortable: !0 }, { field: "Phone", title: "Telefon", titleTooltip: "Telefon", sortable: !0 }, { field: "UserGroupNames", title: "Korisničke grupe", titleTooltip: "Korisničke grupe", sortable: !0 }]; $("#tblUsers").bootstrapTable("destroy"), $.get(AppPath + "api/user", { UserId: CurrentUser.Id, Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (t) { null != t && t.length > 0 ? (Users = t, $("#tblUsers").bootstrapTable({ data: t, striped: !0, columns: e, search: !0, onPostBody: function () { return AfterBindUsers(), !1 } }), HideLoaderCenter()) : ($("#tblUsers").bootstrapTable({ data: [], striped: !0, columns: e, search: !0 }), HideLoaderCenter()) }).fail(function (e, t, a) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom učitavanja korisnika. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() }) } function AfterBindUsers() { $("#tblUsers").find("tr").each(function (e, t) { if (0 == e) $(t).find("th:first-child").hide(), CurrentUser.UserGroupCodes.indexOf("user_admin") >= 0 && 0 == $("#usersEmptyHeader").length && $(t).append("<th id='usersEmptyHeader'></th>"); else { var a = parseInt($(t).find("td:first-child").html()); if ($(t).find("td:first-child").hide(), CurrentUser.UserGroupCodes.indexOf("user_admin") >= 0) { var n = "<td style='width: 100px;'><div class='btn-group pull-right'>"; n += "<button class='btn btn-default btn-sm custom-table-button-edit' data-toggle='tooltip' title='Izmijeni korisnika' onclick='EditUser(" + a.toString() + "); return false;'><span class='glyphicon glyphicon-pencil'></span></button>", n += "<button class='btn btn-default btn-sm custom-table-button-delete' data-toggle='tooltip' title='Izbriši korisnika' onclick='DeleteUser(" + a.toString() + "); return false;'><span class='glyphicon glyphicon-remove'></span></button>", n += "</div></td>", $(t).append(n) } } }) } function EditUser(e) { $("#modalUser").attr("edit_id", e), $(Users).each(function (t, a) { if (a.Id == e) { if ($("#txtUser_Email").val(a.Email), $("#txtUser_FirstName").val(a.FirstName), $("#txtUser_LastName").val(a.LastName), $("#txtUser_Phone").val(a.Phone), $("#ddlUser_UserGroups").val(""), -1 != a.UserGroupCodes.indexOf(",")) { var n = a.UserGroupCodes.split(","); for (var o in n) $("#ddlUser_UserGroups").find("option[value='" + n[o] + "']").prop("selected", "selected") } else $("#ddlUser_UserGroups").find("option[value='" + a.UserGroupCodes + "']").prop("selected", "selected"); return $("#ddlUser_UserGroups").multiselect("refresh"), $("#modalUser").find(".modal-title").html("Izmijeni korisnika: <span style='font-style: italic; color: gray;'>" + a.FirstName + " " + a.LastName + "</span>"), $("#btnOpenModalEditUser").click(), !1 } }) } function DeleteUser(e) { $(Users).each(function (t, a) { if (a.Id == e) return ShowPrompt("Da li ste sigurni da želite izbrisati korisnika?", "<span style='font-style: italic; color: gray;'>" + a.FirstName + " " + a.LastName + "</span>", function () { ShowLoaderCenter(), $.ajax({ url: AppPath + "api/userdelete?Id=" + e.toString() + "&Token=" + CurrentUser.Token + "&Email=" + CurrentUser.Email, type: "GET", success: function () { LoadUsers(), HideLoaderCenter(), ShowAlert("success", "Uspješno izbrisan korisnik.") }, error: function (e) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom brisanja korisnika. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() } }) }, function () { }), !1 }) } function MenuLabels() { CurrentModule = "labels"; var e = document.location.href.split("?")[0] + "?module=" + CurrentModule; history.pushState({ foo: "bar" }, "Oznake", e), DeactivateAllMenuItems(), $(".menu-div").hide(), $("#divLabels").show(), LoadLabels(!1) } function LoadLabels(e, t) { if (ShowLoaderCenter(), !e) { var a = [{ field: "Id" }, { field: "Name", title: "Naziv", titleTooltip: "Naziv", sortable: !0 }, { field: "Colors", title: "Boja", titleTooltip: "Boja", sortable: !0 }]; $("#tblLabels").bootstrapTable("destroy") } $.get(AppPath + "api/label", { UserId: CurrentUser.Id, Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (n) { null != n && n.length > 0 ? (Labels = n, e ? ($("#ddlLabels").html('<option value="" selected="selected">----</option>'), $("#ddlCase_Labels").html(""), $(Labels).each(function (e, t) { $("#ddlLabels").append($("<option></option>").attr("value", t.Id).text(t.Name)), $("#ddlCase_Labels").append($("<option></option>").attr("value", t.Id).text(t.Name)) }), HideLoaderCenter()) : t ? (Labels && Labels.length > 0 ? $(Labels).each(function (e, t) { $("#ddlCase_Search_Labels").append($("<option></option>").attr("value", t.Id).text(t.Name)), e == Labels.length - 1 && SetMultiSelect($("#ddlCase_Search_Labels"), "Sve oznake", !1) }) : SetMultiSelect($("#ddlCase_Search_Labels"), "Sve oznake"), HideLoaderCenter()) : ($("#ddlCase_Labels").html(""), $(Labels).each(function (e, t) { $("#ddlCase_Labels").append($("<option></option>").attr("value", t.Id).text(t.Name)), t.Colors = "<div style='padding:3px; display:inline-block; background-color:" + t.BackgroundColor + "; color:" + t.FontColor + "'>" + t.Name + "</div>", e == Labels.length - 1 && ($("#tblLabels").bootstrapTable({ data: n, striped: !0, showColumns: !0, columns: a, search: !0, escape: !1, onPostBody: function () { return AfterBindLabels(), !1 } }), HideLoaderCenter()) }))) : (e || $("#tblLabels").bootstrapTable({ data: [], striped: !0, showColumns: !0, columns: a, search: !0 }), HideLoaderCenter()) }).fail(function (e, t, a) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom učitavanja oznaka. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() }) } function AfterBindLabels() { $("#tblLabels").find("tr").each(function (e, t) { if (0 == e) $(t).find("th:first-child").hide(), CurrentUser.UserGroupCodes.indexOf("office_admin") >= 0 && 0 == $("#labelsEmptyHeader").length && $(t).append("<th id='labelsEmptyHeader'></th>"); else { var a = parseInt($(t).find("td:first-child").html()); if ($(t).find("td:first-child").hide(), CurrentUser.UserGroupCodes.indexOf("office_admin") >= 0) { var n = "<td style='width: 100px;'><div class='btn-group pull-right'>"; n += "<button class='btn btn-default btn-sm custom-table-button-edit' data-toggle='tooltip' title='Izmijeni oznaku' onclick='EditLabel(" + a.toString() + "); return false;'><span class='glyphicon glyphicon-pencil'></span></button>", n += "<button class='btn btn-default btn-sm custom-table-button-delete' data-toggle='tooltip' title='Izbriši oznaku' onclick='DeleteLabel(" + a.toString() + "); return false;'><span class='glyphicon glyphicon-remove'></span></button>", n += "</div></td>", $(t).append(n) } } }) } function EditLabel(e) { $("#modalLabel").attr("edit_id", e), $(Labels).each(function (t, a) { if (a.Id == e) return $("#txtLabel_Name").val(a.Name), $("#txtLabel_BackgroundColor").val(a.BackgroundColor), $("#txtLabel_FontColor").val(a.FontColor), $("#txtLabel_Name").css("background-color", $("#txtLabel_BackgroundColor").val()), $("#txtLabel_Name").css("color", $("#txtLabel_FontColor").val()), $("#modalLabel").find(".modal-title").html("Izmijeni oznaku: <span style='font-style: italic; color: gray;'>" + a.Name + "</span>"), $("#btnOpenModalEditLabel").click(), !1 }) } function DeleteLabel(e) { $(Labels).each(function (t, a) { if (a.Id == e) return ShowPrompt("Da li ste sigurni da želite izbrisati oznaku?", "<span style='font-style: italic; color: gray;'>" + a.Name + "</span>", function () { ShowLoaderCenter(), $.ajax({ url: AppPath + "api/labeldelete?Id=" + e.toString() + "&Token=" + CurrentUser.Token + "&Email=" + CurrentUser.Email, type: "GET", success: function () { LoadLabels(), HideLoaderCenter(), ShowAlert("success", "Uspješno izbrisana oznaka.") }, error: function (e) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom brisanja oznake. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() } }) }, function () { }), !1 }) } function MenuSudovi() { CurrentModule = "courts"; var e = document.location.href.split("?")[0] + "?module=" + CurrentModule; history.pushState({ foo: "bar" }, "Sudovi", e), DeactivateAllMenuItems(), $("#liMenuSudovi").addClass("active"), $(".menu-div").hide(), $("#divSudovi").show(), LoadSudovi() } function LoadSudovi() { ShowLoaderCenter(); var e = [{ field: "Id" }, { field: "Naziv", title: "Naziv", titleTooltip: "Naziv", sortable: !0, class: "bold" }, { field: "Adresa", title: "Adresa", titleTooltip: "Adresa", sortable: !0 }, { field: "PostanskiBroj", title: "Poštanski broj", titleTooltip: "Poštanski broj", sortable: !0, align: "right" }, { field: "Grad", title: "Grad", titleTooltip: "Grad", sortable: !0 }, { field: "Telefon", title: "Telefon", titleTooltip: "Telefon", sortable: !0 }, { field: "Fax", title: "Fax", titleTooltip: "Fax", sortable: !0 }, { field: "RacunTakse", title: "Račun takse", titleTooltip: "Račun takse", sortable: !0 }, { field: "RacunVjestacenja", title: "Račun vještačenja", titleTooltip: "Račun vještačenja", sortable: !0 }, { field: "CreatedByName", title: "Kreirao/la", titleTooltip: "Kreirao/la", sortable: !0, visible: !1 }, { field: "Created", title: "Datum kreiranja", titleTooltip: "Datum kreiranja", sortable: !0, visible: !1, sorter: DateSorterFunction }, { field: "ModifiedByName", title: "Izmijenio/la", titleTooltip: "Izmijenio/la", sortable: !0, visible: !1 }, { field: "Modified", title: "Datum zadnje izmjene", titleTooltip: "Datum zadnje izmjene", sortable: !0, visible: !1, sorter: DateSorterFunction }]; $("#tblSudovi").bootstrapTable("destroy"), $.get(AppPath + "api/sud", { UserId: CurrentUser.Id, Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (t) { null != t && t.length > 0 ? (Sudovi = t, $(t).each(function (a, n) { Date.parse(n.Created) && (n.Created = moment(n.Created).format("DD.MM.YYYY")), Date.parse(n.Modified) && (n.Modified = moment(n.Modified).format("DD.MM.YYYY")), a == t.length - 1 && ($("#tblSudovi").bootstrapTable({ data: t, striped: !0, showColumns: !0, columns: e, search: !0, onPostBody: function () { return AfterBindSudovi(), !1 } }), HideLoaderCenter()) })) : ($("#tblSudovi").bootstrapTable({ data: [], striped: !0, showColumns: !0, columns: e, search: !0 }), HideLoaderCenter()) }).fail(function (e, t, a) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom učitavanja sudova. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() }) } function AfterBindSudovi() { $("#tblSudovi").find("tr").each(function (e, t) { if (0 == e) $(t).find("th:first-child").hide(), CurrentUser.UserGroupCodes.indexOf("office_admin") >= 0 && 0 == $("#sudoviEmptyHeader").length && $(t).append("<th id='sudoviEmptyHeader'></th>"); else { var a = parseInt($(t).find("td:first-child").html()); if ($(t).find("td:first-child").hide(), CurrentUser.UserGroupCodes.indexOf("office_admin") >= 0) { var n = "<td style='width: 100px;'><div class='btn-group pull-right'>"; n += "<button class='btn btn-default btn-sm custom-table-button-edit' data-toggle='tooltip' title='Izmijeni podatke o sudu' onclick='EditSud(" + a.toString() + "); return false;'><span class='glyphicon glyphicon-pencil'></span></button>", n += "<button class='btn btn-default btn-sm custom-table-button-delete' data-toggle='tooltip' title='Izbriši sud' onclick='DeleteSud(" + a.toString() + "); return false;'><span class='glyphicon glyphicon-remove'></span></button>", n += "</div></td>", $(t).append(n) } $(t).dblclick(function () { EditSud(a) }) } }) } function EditSud(e) { $("#modalSud").attr("edit_id", e), $(Sudovi).each(function (t, a) { if (a.Id == e) return $("#txtSud_Naziv").val(a.Naziv), $("#txtSud_Adresa").val(a.Adresa), $("#txtSud_PostanskiBroj").val(a.PostanskiBroj), $("#txtSud_Grad").val(a.Grad), $("#txtSud_Telefon").val(a.Telefon), $("#txtSud_Fax").val(a.Fax), $("#txtSud_RacunTakse").val(a.RacunTakse), $("#txtSud_RacunVjestacenja").val(a.RacunVjestacenja), $("#modalSud").find(".modal-title").html("Izmijeni sud: <span style='font-style: italic; color: gray;'>" + a.Naziv + "</span>"), $("#btnOpenModalEditSud").click(), !1 }) } function DeleteSud(e) { $(Sudovi).each(function (t, a) { if (a.Id == e) return ShowPrompt("Da li ste sigurni da želite izbrisati sud?", "<span style='font-style: italic; color: gray;'>" + a.Naziv + "</span>", function () { ShowLoaderCenter(), $.ajax({ url: AppPath + "api/suddelete?Id=" + e.toString() + "&Token=" + CurrentUser.Token + "&Email=" + CurrentUser.Email, type: "GET", success: function () { LoadSudovi(), HideLoaderCenter(), ShowAlert("success", "Uspješno izbrisan sud.") }, error: function (e) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom brisanja suda. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() } }) }, function () { }), !1 }) } function DeactivateAllMenuItems() { $(".menu-item").removeClass("active"), $(".menu-sub-item").css("background-color", "") } function SaveCaseActivity() { "" != $("#txtCase_CaseActivity_Note").val() && "" != $("#txtCase_CaseActivity_ActivityDate").val() && (ShowLoaderCenter(), $.post(AppPath + "api/caseactivity", { CaseId: CurrentCase.Id, Note: $("#txtCase_CaseActivity_Note").val(), ActivityDate: ConvertBSDateToUSDateString($("#txtCase_CaseActivity_ActivityDate").val()), ActivityDaysOffset: $("#txtCase_CaseActivity_ActivityDaysOffset").val(), ForAllUsers: $("#cbCase_CaseActivity_ForAllUsers").prop("checked"), CreatedBy: CurrentUser.Id, Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (e) { e && e > 0 ? (LoadCaseActivities(), HideLoaderCenter()) : (HideLoaderCenter(), ShowAlert("danger", "Greška pri spašavanju pozivanja predmeta.")) }).fail(function (e) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom spašavanja pozivanja predmeta. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() })) } function SaveCase() { ShowLoaderCenter(); var e; e = $("#txtCase_StanjePredmeta").val(); var t = { CreatedBy: CurrentUser.Id, KategorijaPredmetaId: $("#ddlCase_Kategorija").val(), UlogaId: $("#ddlCase_Uloga").val(), PrivremeniZastupnici: $("#cbCase_PrivremeniZastupnici").prop("checked"), PristupPredmetu: $("#cbCase_PristupPredmetu").prop("checked"), Iniciran: ConvertBSDateToUSDateString($("#txtCase_Iniciran").val()), BrojPredmeta: $("#txtCase_BrojPredmeta").val(), SudId: $("#ddlCase_Sud").val(), SudijaId: $("#ddlCase_Sudija").val(), VrijednostSpora: $("#txtCase_VrijednostSpora").attr("number_value"), VrstaPredmetaId: $("#ddlCase_VrstaPredmeta").val(), DatumStanjaPredmeta: ConvertBSDateToUSDateString($("#txtCase_DatumStanjaPredmeta").val()), StanjePredmetaName: e, NacinOkoncanjaId: $("#ddlCase_NacinOkoncanja").val(), Uspjeh: $("#ddlCase_Uspjeh").val(), DatumArhiviranja: ConvertBSDateToUSDateString($("#txtCase_DatumArhiviranja").val()), BrojArhive: $("#txtCase_BrojArhive").val(), BrojArhiveRegistrator: $("#txtCase_BrojArhiveRegistrator").val(), PravniOsnov: $("#txtCase_PravniOsnov").val(), Parties: CurrentCase.Parties, Notes: CurrentCase.Notes, Expenses: CurrentCase.Expenses, Radnje: CurrentCase.Radnje, Documents: CurrentCase.Documents, Connections: CurrentCase.Connections, Token: CurrentUser.Token, Email: CurrentUser.Email }, a = $("#modalCase").attr("edit_id"); null != a && (t.Id = a, t.ModifiedBy = CurrentUser.Id), $.post(AppPath + "api/predmet", t).done(function (e) { e && e > 0 ? (ShowAlert("success", "Uspješno spašen predmet."), UpdateRadnje_GoogleEvents(), $("#cbCase_CaseActivity_SaveNew").prop("checked") && SaveCaseActivity(), HideLoaderCenter(), "home" == CurrentModule ? LoadRadnje() : "cases" == CurrentModule && LoadCases(void 0, void 0, void 0, !0)) : (HideLoaderCenter(), ShowAlert("danger", "Greška pri spašavanju predmeta.")) }).fail(function (e) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom spašavanja predmeta. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() }) } function UpdateRadnje_GoogleEvents() { $.get(AppPath + "api/radnja", { PredmetId: CurrentCase.Id, UserId: CurrentUser.Id, Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (e) { CurrentCase.Radnje = e, $(CurrentCase.Radnje).each(function (e, t) { !t.CreateCalendarEvent || null != t.GoogleEventId && null != t.GoogleEventId && "" != t.GoogleEventId || CreateGoogleCalendarEvent(t, UpdateRadnja_GoogleEventId) }), $(CurrentCase.DeletedRadnje).each(function (e, t) { DeleteGoogleCalendarEvent(t.GoogleEventId) }) }).fail(function (e, t, a) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom učitavanja radnji. Probajte ponovo ili kontaktirajte administratora.") }) } function UpdateRadnja_GoogleEventId(e) { $.post(AppPath + "api/radnja", { Id: e.Id, GoogleEventId: e.GoogleEventId, Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (e) { }).fail(function (e) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom kreiranja radnje u Google kalendaru. Kontaktirajte administratora.") }) } function ClearInputSectionRadnje() { $("#ddlCase_Radnja_VrstaRadnje").val(-1), $("#txtCase_Radnja_DatumRadnje").val(""), $("#txtCase_Radnja_Biljeske").val(""), $("#aCase_Radnja_DocumentLink").html(""), $("#aCase_Radnja_DocumentLink").removeAttr("href"), $("#aCase_Radnja_DocumentLink").removeAttr("google_drive_doc_id"), $("#btnCase_Radnja_RemoveGoogleDoc").hide(), $("#btnAppendRadnjaToCase").attr("disabled", "disabled") } function ClearInputSectionDocuments() { $("#txtCase_Document_TipDokumenta").val(""), $("#txtCase_Document_PredatoUz").val(""), $("#txtCase_Document_Note").val(""), $("#aCase_Document_DocumentLink").html(""), $("#aCase_Document_DocumentLink").removeAttr("href"), $("#aCase_Document_DocumentLink").removeAttr("google_drive_doc_id"), $("#btnCase_Document_RemoveGoogleDoc").hide(), $("#btnAppendDocumentToCase").attr("disabled", "disabled") } function ClearInputSectionConnections() { $("#txtCase_Connection_ConnectionCase").val(""), $("#txtCase_Connection_ConnectionCase").attr("caseId", -1), $("#txtCase_Connection_Note").val(""), $("#btnAppendConnectionToCase").attr("disabled", "disabled") } function ClearInputSectionExpenses() { $("#ddlCase_ExpenseVrstaTroska").val(-1), $("#txtCase_ExpenseAmount").val(""), $("#txtCase_ExpenseAmount").removeAttr("number_value"), $("#txtCase_ExpenseDate").val(""), $("#ddlCase_ExpensePaidBy").val(""), $("#btnAppendExpenseToCase").attr("disabled", "disabled") } function ClearInputSectionNotes() { $("#txtCase_NoteDate").val(""), $("#txtCase_NoteText").val(""), $("#btnAppendNoteToCase").attr("disabled", "disabled") } function EditCase(e) { if ($("#modalCase").attr("edit_id", e), OpenOtherTab($("#aRadnjeOtherTab"), "divRadnje"), $("#ddlCase_Lice").val(-1), $("#ddlCase_UlogaLica").val(-1), $("#ddlCase_GlavnaStranka").val(""), $("#ddlCase_UlogaOrdinalNo").val(""), $("#btnAppendPartyToCase").attr("disabled", "disabled"), ClearInputSectionNotes(), ClearInputSectionExpenses(), ClearInputSectionRadnje(), ClearInputSectionDocuments(), ClearInputSectionConnections(), $("#cbCase_CaseActivity_SaveNew").removeAttr("disabled"), $("#cbCase_CaseActivity_SaveNew").prop("checked", !1), $("#txtCase_CaseActivity_ActivityDaysOffset").val(0), $("#txtCase_CaseActivity_ActivityDate").val(""), $("#txtCase_CaseActivity_Note").val(""), $("#cbCase_CaseActivity_ForAllUsers").prop("checked", !0), $("#txtCase_CaseActivity_ActivityDate").attr("disabled", "disabled"), $("#txtCase_CaseActivity_ActivityDaysOffset").attr("disabled", "disabled"), $("#txtCase_CaseActivity_Note").attr("disabled", "disabled"), $("#cbCase_CaseActivity_ForAllUsers").attr("disabled", "disabled"), $("#btnGenerateTemplateForCase").off("click"), $("#btnSaveCase").hide(), $("#btnSaveAndCloseCase").hide(), null == Predmeti) MenuCases_LoadDataOnly(function () { LoadCases(e, function () { EditCase(e) }) }); else { var t = !1; $(Predmeti).each(function (a, n) { if (n.Id == e) { t = !0, CurrentCase = $.extend(!0, {}, n), $("#txtCase_NasBroj").val(CurrentCase.NasBroj), $("#ddlCase_Kategorija").val(CurrentCase.KategorijaPredmetaId).change(), $("#ddlCase_Uloga").val(CurrentCase.UlogaId), $("#cbCase_PrivremeniZastupnici").prop("checked", CurrentCase.PrivremeniZastupnici), $("#cbCase_PristupPredmetu").prop("checked", CurrentCase.PristupPredmetu), $("#txtCase_Iniciran").val(CurrentCase.Iniciran), $("#txtCase_BrojPredmeta").val(CurrentCase.BrojPredmeta), $("#ddlCase_Sud").val(CurrentCase.SudId), $("#ddlCase_Sudija").val(CurrentCase.SudijaId), $("#txtCase_VrijednostSpora").attr("number_value", CurrentCase.VrijednostSpora), $("#txtCase_VrijednostSpora").val(GetMoneyFormat(CurrentCase.VrijednostSpora)), $("#ddlCase_VrstaPredmeta").val(CurrentCase.VrstaPredmetaId), $("#txtCase_DatumStanjaPredmeta").val(CurrentCase.DatumStanjaPredmeta), $("#txtCase_StanjePredmeta").val(CurrentCase.StanjePredmetaName), $("#ddlCase_NacinOkoncanja").val(CurrentCase.NacinOkoncanjaId), $("#ddlCase_Uspjeh").val(CurrentCase.Uspjeh), $("#txtCase_DatumArhiviranja").val(CurrentCase.DatumArhiviranja), $("#txtCase_BrojArhive").val(CurrentCase.BrojArhive), $("#txtCase_BrojArhiveRegistrator").val(CurrentCase.BrojArhiveRegistrator), $("#txtCase_PravniOsnov").val(CurrentCase.PravniOsnov), $("#txtCase_CaseActivity_ActivityDaysOffset").val(CurrentCase.SkontroDan), $("#txtCase_CaseActivity_ActivityDate").val(CurrentCase.SkontroDatum), $("#txtCase_CaseActivity_Note").val(CurrentCase.SkontroBiljeska), null != CurrentCase.SkontroDan ? $("#cbCase_CaseActivity_ForAllUsers").prop("checked", CurrentCase.Skontro_ForAllUsers) : $("#cbCase_CaseActivity_ForAllUsers").prop("checked", !0), $("#modalCase").find(".modal-title").html("Izmijeni predmet: <span style='font-style: italic; color: gray;'>" + CurrentCase.Naziv + "</span>"), CurrentCase.Labels = BuildLabelsHTML(CurrentCase.LabelIds, "case", CurrentCase.Id, !0), $("#divCase_Labels").html(CurrentCase.Labels), setTimeout(function () { $("#divCase_Labels").css("max-width", ($("#divCase_Labels").parent().parent().width() / 2).toString() + "px") }, 1e3); var o = 0; function r() { --o <= 0 && CurrentUser.UserGroupCodes.indexOf("office_admin") >= 0 && ($("#btnSaveCase").show(), $("#btnSaveAndCloseCase").show()) } return ShowLoaderCenter(), o++, $.get(AppPath + "api/licepredmet", { Id: CurrentCase.Id, Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (e) { CurrentCase.Parties = e, BindCaseParties(CurrentCase.Parties), HideLoaderCenter(), r() }).fail(function (e, t, a) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom učitavanja stranki. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter(), r() }), ShowLoaderCenter(), o++, $.get(AppPath + "api/note", { CaseId: CurrentCase.Id, Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (e) { CurrentCase.Notes = e, BindCaseNotes(CurrentCase.Notes), HideLoaderCenter(), r() }).fail(function (e, t, a) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom učitavanja bilješki. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter(), r() }), ShowLoaderCenter(), o++, $.get(AppPath + "api/expense", { CaseId: CurrentCase.Id, Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (e) { CurrentCase.Expenses = e, BindCaseExpenses(CurrentCase.Expenses), HideLoaderCenter(), r() }).fail(function (e, t, a) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom učitavanja troškova. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter(), r() }), ShowLoaderCenter(), o++, $.get(AppPath + "api/radnja", { PredmetId: CurrentCase.Id, UserId: CurrentUser.Id, Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (e) { CurrentCase.Radnje = e, CurrentCase.DeletedRadnje = [], BindCaseRadnje(CurrentCase.Radnje), HideLoaderCenter(), r() }).fail(function (e, t, a) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom učitavanja radnji. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter(), r() }), ShowLoaderCenter(), o++, $.get(AppPath + "api/document", { CaseId: CurrentCase.Id, UserId: CurrentUser.Id, Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (e) { CurrentCase.Documents = e, BindCaseDocuments(CurrentCase.Documents), HideLoaderCenter(), r() }).fail(function (e, t, a) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom učitavanja dokumenata. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter(), r() }), ShowLoaderCenter(), o++, $.get(AppPath + "api/connection", { CaseId: CurrentCase.Id, UserId: CurrentUser.Id, Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (e) { CurrentCase.Connections = e, BindCaseConnections(CurrentCase.Connections), HideLoaderCenter(), r() }).fail(function (e, t, a) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom učitavanja veza. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter(), r() }), $("#btnGenerateTemplateForCase").click(function () { GenerateTemplateForCase(CurrentCase.Id) }), $("#btnOpenModalEditCase").click(), !1 } a == Predmeti.length - 1 && !1 === t && (MenuCases_LoadDataOnly(), LoadCases(e, function () { EditCase(e) })) }) } } function GenerateTemplateForCase(e) { $(Predmeti).each(function (t, a) { if (a.Id == e) return $("#modalTemplate").attr("case_id", e), $("#modalTemplate").attr("case_nasBroj", a.NasBroj), LoadTemplates(function () { $("#btnOpenModalGenerateTemplate").click() }), !1 }) } function GenerateTemplate() { ShowLoaderCenter(), $.post(AppPath + "api/template", { TemplateName: $("#ddlTemplates").val(), CaseId: parseInt($("#modalTemplate").attr("case_id")), UserId: CurrentUser.Id, FilterNasBroj: parseInt($("#modalTemplate").attr("case_nasBroj")), Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (e) { e && e.length > 0 ? (window.location = AppPath + "/Temp/" + CurrentUser.Id.toString() + "/" + e, ShowAlert("success", "Uspješno generisan dokument."), HideLoaderCenter()) : (HideLoaderCenter(), ShowAlert("danger", "Greška pri generisanju dokumenta.")) }).fail(function (e) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom generisanja dokumenta. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() }) } function LoadTemplates(e) { ShowLoaderCenter(), $.get(AppPath + "api/template", { UserId: CurrentUser.Id, Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (t) { null != t && t.length > 0 && (Templates = t, $("#ddlTemplates").html('<option value="">-----</option>'), $(Templates).each(function (t, a) { $("#ddlTemplates").append($("<option></option>").attr("value", a.Name).text(a.Name.replace(".docx", ""))), t == Templates.length - 1 && null != e && "function" == typeof e && e() })), HideLoaderCenter() }).fail(function (e, t, a) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom učitavanja predložaka. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() }) } function ClearModalUser() { $("#modalUser").removeAttr("edit_id"), $("#txtUser_Email").val(""), $("#txtUser_FirstName").val(""), $("#txtUser_LastName").val(""), $("#txtUser_Phone").val(""), $("#ddlUser_UserGroups").val(""), $("#ddlUser_UserGroups").multiselect("refresh"), $("#modalUser").find(".modal-title").html("Novi korisnik") } function SaveUser() { ShowLoaderCenter(); var e = { Email: $("#txtUser_Email").val(), FirstName: $("#txtUser_FirstName").val(), LastName: $("#txtUser_LastName").val(), Phone: $("#txtUser_Phone").val(), UserGroupCodes: GetDataFromMultiselect("ddlUser_UserGroups"), Token: CurrentUser.Token, ValidationEmail: CurrentUser.Email }, t = $("#modalUser").attr("edit_id"); null != t && (e.Id = t), $.post(AppPath + "api/user", e).done(function (e) { e && e > 0 ? (ShowAlert("success", "Uspješno spašen korisnik."), HideLoaderCenter(), LoadUsers()) : (HideLoaderCenter(), ShowAlert("danger", "Greška pri spašavanju korisnika.")) }).fail(function (e) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom spašavanja korisnika. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() }) } function ClearModalLabel() { $("#modalLabel").removeAttr("edit_id"), $("#txtLabel_Name").val(""), $("#txtLabel_BackgroundColor").val("#ffffff"), $("#txtLabel_FontColor").val("#000000"), $("#txtLabel_Name").css("background-color", "default"), $("#txtLabel_Name").css("color", "default"), $("#modalLabel").find(".modal-title").html("Nova oznaka") } function SaveLabel() { ShowLoaderCenter(); var e = { Name: $("#txtLabel_Name").val(), BackgroundColor: $("#txtLabel_BackgroundColor").val(), FontColor: $("#txtLabel_FontColor").val(), Token: CurrentUser.Token, Email: CurrentUser.Email }, t = $("#modalLabel").attr("edit_id"); null != t && (e.Id = t), $.post(AppPath + "api/label", e).done(function (e) { e && e > 0 ? (ShowAlert("success", "Uspješno spašena oznaka."), HideLoaderCenter(), LoadLabels(!1)) : (HideLoaderCenter(), ShowAlert("danger", "Greška pri spašavanju oznake.")) }).fail(function (e) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom spašavanja oznake. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() }) } function ClearModalSud() { $("#modalSud").removeAttr("edit_id"), $("#txtSud_Naziv").val(""), $("#txtSud_Adresa").val(""), $("#txtSud_PostanskiBroj").val(""), $("#txtSud_Grad").val(""), $("#txtSud_Telefon").val(""), $("#txtSud_Fax").val(""), $("#txtSud_RacunTakse").val(""), $("#txtSud_RacunVjestacenja").val(""), $("#modalSud").find(".modal-title").html("Novi sud") } function SaveSud() { ShowLoaderCenter(); var e = { CreatedBy: CurrentUser.Id, Naziv: $("#txtSud_Naziv").val(), Adresa: $("#txtSud_Adresa").val(), PostanskiBroj: $("#txtSud_PostanskiBroj").val(), Grad: $("#txtSud_Grad").val(), Telefon: $("#txtSud_Telefon").val(), Fax: $("#txtSud_Fax").val(), RacunTakse: $("#txtSud_RacunTakse").val(), RacunVjestacenja: $("#txtSud_RacunVjestacenja").val(), Token: CurrentUser.Token, Email: CurrentUser.Email }, t = $("#modalSud").attr("edit_id"); null != t && (e.Id = t, e.ModifiedBy = CurrentUser.Id), $.post(AppPath + "api/sud", e).done(function (e) { e && e > 0 ? (ShowAlert("success", "Uspješno spašen sud."), HideLoaderCenter(), LoadSudovi()) : (HideLoaderCenter(), ShowAlert("danger", "Greška pri spašavanju suda.")) }).fail(function (e) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom spašavanja suda. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() }) } function LoadUserGroups() { ShowLoaderCenter(), $.get(AppPath + "api/usergroup", { UserId: CurrentUser.Id, Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (e) { e ? ($("#ddlUser_UserGroups").html(""), $(e).each(function (t, a) { $("#ddlUser_UserGroups").append($("<option></option>").attr("value", a.Code).text(a.Name)), t == e.length - 1 && $("#ddlUser_UserGroups").multiselect({ includeSelectAllOption: !1, allSelectedText: "Sve grupe", nonSelectedText: "Ništa nije odabrano", maxHeight: 200 }) }), HideLoaderCenter()) : HideLoaderCenter() }).fail(function (e, t, a) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom učitavanja korisničkih grupa. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() }) } function SetMultiSelect(e, t, a) { null == a && (a = !0), e.multiselect({ includeSelectAllOption: a, allSelectedText: t, selectAllText: "Odaberi sve / ništa", nonSelectedText: "Ništa nije odabrano", maxHeight: 200 }) } function LoadCodeTableData(e, t, a, n) { null == a && (a = "Name"), ShowLoaderCenter(), $.get(AppPath + "api/codetable", { Name: e, ColumnName: a, Filter: "", Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (a) { a ? ($(a).each(function (o, r) { "VrsteRadnji" == e ? t.append($("<option></option>").attr("value", r.Id).attr("has_star", r.Name.indexOf("*") > -1).text(r.Name.replace("*", ""))) : t.append($("<option></option>").attr("value", r.Id).text(r.Name)), o == a.length - 1 && null != n && "function" == typeof n && n() }), 0 == a.length && null != n && "function" == typeof n && n(), HideLoaderCenter()) : (null != n && "function" == typeof n && n(), HideLoaderCenter()) }).fail(function (e, t, a) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom učitavanja podataka kodne tabele. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter(), null != n && "function" == typeof n && n() }) } function LoadCodeTableUI(e, t, a, n, o) { CurrentModule = t; var r = document.location.href.split("?")[0] + "?module=" + CurrentModule; history.pushState({ foo: "bar" }, t, r), $(".menu-item").removeClass("active"), $("#liMenuCodeTables").addClass("active"), $(".menu-sub-item").css("background-color", ""), $(e).parent().css("background-color", "#e7e7e7"), $(".menu-div").hide(), "Oznake" !== t ? ($("#divCodeTable").show(), CurrentCodeTable = { Element: e, Title: t, TableName: a, ColumnName: n, Remark: o }, $("#divCodeTable").find(".panel-heading").html("<strong style='font-size:1.2em;'>" + t + "</strong>"), null != o && null != o && $("#divCodeTable").find(".panel-heading").append("<br><span>(" + o + ")</span>"), ShowLoaderCenter(), null == n && (n = "Name"), $("#tblCodeTableData").bootstrapTable("destroy"), $.get(AppPath + "api/codetable", { Name: a, ColumnName: n, Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (e) { if (e) { CurrentCodeTable.Data = e; $("#tblCodeTableData").bootstrapTable("destroy"), $("#tblCodeTableData").bootstrapTable({ data: e, striped: !0, showRefresh: !1, columns: [{ field: "Id" }, { field: "OrdinalNo", width: 100 }, { field: "Name" }], search: !0, showHeader: !1, onPostBody: function () { return AfterBindCodeTableData(), !1 } }), HideLoaderCenter() } else HideLoaderCenter() }).fail(function (e, t, a) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom učitavanja kodne tabele. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() })) : $("#divLabels").show() } function AfterBindCodeTableData() { $("#tblCodeTableData").find("tr").each(function (e, t) { var a = parseInt($(t).find("td:first-child").html()); if ($(t).find("td:first-child").hide(), CurrentUser.UserGroupCodes.indexOf("office_admin") >= 0) { var n = "<td style='width: 100px;'><div class='btn-group pull-right'>"; n += "<button class='btn btn-default btn-sm custom-table-button-edit' data-toggle='tooltip' title='Izmijeni' onclick='EditCodeTableRecord(" + a.toString() + "); return false;'><span class='glyphicon glyphicon-pencil'></span></button>", n += "<button class='btn btn-default btn-sm custom-table-button-delete' data-toggle='tooltip' title='Izbriši' onclick='DeleteCodeTableRecord(" + a.toString() + "); return false;'><span class='glyphicon glyphicon-remove'></span></button>", n += "</div></td>", $(t).append(n) } }) } function EditCodeTableRecord(e) { $("#modalCodeTableRecord").attr("edit_id", e), $(CurrentCodeTable.Data).each(function (t, a) { if (a.Id == e) return $("#txtCodeTableRecord_Name").val(a.Name), $("#modalCodeTableRecord").find(".modal-title").html(CurrentCodeTable.Title + " - Izmijeni: <span style='font-style: italic; color: gray;'>" + a.Name + "</span>"), $("#btnOpenModalEditCodeTableRecord").click(), !1 }) } function NewCodeTableRecord() { $("#modalCodeTableRecord").removeAttr("edit_id"), $("#txtCodeTableRecord_Name").val(""), $("#modalCodeTableRecord").find(".modal-title").html(CurrentCodeTable.Title + " - Novi unos") } function DeleteCodeTableRecord(e) { $(CurrentCodeTable.Data).each(function (t, a) { if (a.Id == e) return ShowPrompt("Da li ste sigurni da želite izbrisati?", "<span style='font-style: italic; color: gray;'>" + a.Name + "</span>", function () { ShowLoaderCenter(), $.ajax({ url: AppPath + "api/codetabledelete?TableName=" + CurrentCodeTable.TableName + "&Id=" + e.toString() + "&Token=" + CurrentUser.Token + "&Email=" + CurrentUser.Email, type: "GET", success: function () { LoadCodeTableUI(CurrentCodeTable.Element, CurrentCodeTable.Title, CurrentCodeTable.TableName, CurrentCodeTable.ColumnName), HideLoaderCenter(), ShowAlert("success", "Uspješno izbrisano.") }, error: function (e) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom brisanja podatka. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() } }) }, function () { }), !1 }) } function SaveCodeTableRecord() { ShowLoaderCenter(); var e = { TableName: CurrentCodeTable.TableName, Name: $("#txtCodeTableRecord_Name").val(), Token: CurrentUser.Token, Email: CurrentUser.Email }, t = $("#modalCodeTableRecord").attr("edit_id"); null != t && (e.Id = t), $.post(AppPath + "api/codetable", e).done(function (e) { e && e > 0 ? (LoadCodeTableUI(CurrentCodeTable.Element, CurrentCodeTable.Title, CurrentCodeTable.TableName, CurrentCodeTable.ColumnName), HideLoaderCenter(), ShowAlert("success", "Uspješno spašen podatak.")) : (HideLoaderCenter(), ShowAlert("danger", "Greška pri spašavanju podatka.")) }).fail(function (e) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom spašavanja podatka. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() }) } function ClearModalCase(e) { $("#modalCase").removeAttr("edit_id"), $("#txtCase_NasBroj").val(""), $("#ddlCase_Kategorija").val(-1).change(), $("#ddlCase_Uloga").val(-1), $("#cbCase_PrivremeniZastupnici").prop("checked", !1), $("#cbCase_PristupPredmetu").prop("checked", !1), $("#txtCase_Iniciran").val(""), $("#txtCase_BrojPredmeta").val(""), $("#ddlCase_Sud").val(-1), $("#ddlCase_Sudija").val(-1), $("#txtCase_VrijednostSpora").val(""), $("#txtCase_VrijednostSpora").removeAttr("number_value"), $("#ddlCase_VrstaPredmeta").val(-1), $("#txtCase_DatumStanjaPredmeta").val(""), $("#txtCase_StanjePredmeta").val(""), $("#ddlCase_NacinOkoncanja").val(-1), $("#ddlCase_Uspjeh").val(""), $("#txtCase_DatumArhiviranja").val(""), $("#txtCase_BrojArhive").val(""), $("#txtCase_BrojArhiveRegistrator").val(""), $("#divCase_Labels").html(""), $("#txtCase_PravniOsnov").val(""), $("#ddlCase_Lice").val(-1), $("#ddlCase_UlogaLica").val(-1), $("#ddlCase_UlogaOrdinalNo").val(""), $("#ddlCase_GlavnaStranka").val(""), $("#btnAppendPartyToCase").attr("disabled", "disabled"), $("#txtCase_NoteDate").val(""), $("#txtCase_NoteText").val(""), $("#btnAppendNoteToCase").attr("disabled", "disabled"), $("#ddlCase_ExpenseVrstaTroska").val(-1), $("#txtCase_ExpenseAmount").val(""), $("#txtCase_ExpenseAmount").removeAttr("number_value"), $("#txtCase_ExpenseDate").val(""), $("#ddlCase_ExpensePaidBy").val(""), $("#btnAppendExpenseToCase").attr("disabled", "disabled"), $("#ddlCase_Radnja_VrstaRadnje").val(-1), $("#txtCase_Radnja_DatumRadnje").val(""), $("#txtCase_Radnja_Biljeske").val(""), $("#aCase_Radnja_DocumentLink").val(""), $("#aCase_Radnja_DocumentLink").removeAttr("href"), $("#aCase_Radnja_DocumentLink").removeAttr("google_drive_doc_id"), $("#btnAppendRadnjaToCase").attr("disabled", "disabled"), $("#txtCase_Document_TipDokumenta").val(""), $("#txtCase_Document_PredatoUz").val(""), $("#txtCase_Document_Note").val(""), $("#btnAppendDocumentToCase").attr("disabled", "disabled"), $("#txtCase_Connection_ConnectionCase").val(""), $("#txtCase_Connection_ConnectionCase").attr("caseId", -1), $("#txtCase_Connection_Note").val(""), $("#btnAppendConnectionToCase").attr("disabled", "disabled"), $("#modalCase").find(".modal-title").html("Novi predmet"), $("#tblCaseParties").bootstrapTable("destroy"), $("#cbCase_CaseActivity_SaveNew").prop("checked", !1), $("#cbCase_CaseActivity_SaveNew").attr("disabled", "disabled"), $("#txtCase_CaseActivity_ActivityDate").val(""), $("#txtCase_CaseActivity_ActivityDaysOffset").val(0), $("#txtCase_CaseActivity_Note").val(""), $("#cbCase_CaseActivity_ForAllUsers").prop("checked", "checked"), $("#txtCase_CaseActivity_ActivityDate").attr("disabled", "disabled"), $("#txtCase_CaseActivity_ActivityDaysOffset").attr("disabled", "disabled"), $("#txtCase_CaseActivity_Note").attr("disabled", "disabled"), $("#cbCase_CaseActivity_ForAllUsers").attr("disabled", "disabled"), $("#btnGenerateTemplateForCase").off("click"), !0 === e ? ($("#btnSaveCase").show(), $("#btnSaveAndCloseCase").show()) : ($("#btnSaveCase").hide(), $("#btnSaveAndCloseCase").hide()) } function ClearModalParty() { $("#modalParty").removeAttr("edit_id"), $("#txtParty_Prezime").val(""), $("#txtParty_Ime").val(""), $("#cbParty_IsMinor").prop("checked", !1), $("#txtParty_ZakonskiZastupnik").val(""), $("#txtParty_PravnoLice").val(""), $("#txtParty_Adresa").val(""), $("#txtParty_PostanskiBroj").val(""), $("#txtParty_Grad").val(""), $("#ddlParty_Drzava").val("-1"), $("#txtParty_Telefon").val(""), $("#txtParty_Fax").val(""), $("#txtParty_Email").val(""), $("#txtParty_JMBG_IDBroj").val(""), $("#txtParty_Biljeske").val(""), $("#tblPartyCases").bootstrapTable("destroy"), $("#modalParty").find(".modal-title").html("Nova stranka") } function SaveParty() { ShowLoaderCenter(); var e = { CreatedBy: CurrentUser.Id, Prezime: $("#txtParty_Prezime").val(), Ime: $("#txtParty_Ime").val(), IsMinor: $("#cbParty_IsMinor").prop("checked"), ZakonskiZastupnik: $("#txtParty_ZakonskiZastupnik").val(), PravnoLice: $("#txtParty_PravnoLice").val(), Adresa: $("#txtParty_Adresa").val(), PostanskiBroj: $("#txtParty_PostanskiBroj").val(), Grad: $("#txtParty_Grad").val(), DrzavaId: -1 == $("#ddlParty_Drzava").val() ? null : $("#ddlParty_Drzava").val(), Telefon: $("#txtParty_Telefon").val(), Fax: $("#txtParty_Fax").val(), Email: $("#txtParty_Email").val(), JMBG_IDBroj: $("#txtParty_JMBG_IDBroj").val(), Biljeske: $("#txtParty_Biljeske").val(), Token: CurrentUser.Token, ValidationEmail: CurrentUser.Email }, t = $("#modalParty").attr("edit_id"); null != t && (e.Id = t, e.ModifiedBy = CurrentUser.Id), $.post(AppPath + "api/lice", e).done(function (e) { e && e > 0 ? (ShowAlert("success", "Uspješno spašena stranka."), $("#ddlCase_Lice").html('<option value="-1">-----</option>'), LoadCodeTableData("vLica_Id_Naziv", $("#ddlCase_Lice"), "Naziv"), HideLoaderCenter(), LoadParties()) : (HideLoaderCenter(), ShowAlert("danger", "Greška pri spašavanju stranke.")) }).fail(function (e) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom spašavanja stranke. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() }) } function EditParty(e) { $("#modalParty").attr("edit_id", e), $(Lica).each(function (t, a) { if (a.Id == e) return $("#txtParty_Prezime").val(a.Prezime), $("#txtParty_Ime").val(a.Ime), $("#cbParty_IsMinor").prop("checked", a.IsMinor), $("#txtParty_ZakonskiZastupnik").val(a.ZakonskiZastupnik), $("#txtParty_PravnoLice").val(a.PravnoLice), $("#txtParty_Adresa").val(a.Adresa), $("#txtParty_PostanskiBroj").val(a.PostanskiBroj), $("#txtParty_Grad").val(a.Grad), $("#ddlParty_Drzava").val(a.DrzavaId), $("#txtParty_Telefon").val(a.Telefon), $("#txtParty_Fax").val(a.Fax), $("#txtParty_Email").val(a.Email), $("#txtParty_JMBG_IDBroj").val(a.JMBG_IDBroj), $("#txtParty_Biljeske").val(a.Biljeske), $("#modalParty").find(".modal-title").html("Izmijeni stranku: <span style='font-style: italic; color: gray;'>" + a.Naziv + "</span>"), $("#btnOpenModalEditParty").click(), LoadPartyCases(e), !1 }) } function LoadPartyCases(e) { ShowLoaderCenter(); var t = [{ field: "Id" }, { field: "Naziv", title: "Naziv", titleTooltip: "Naziv", sortable: !1 }]; $("#tblPartyCases").bootstrapTable("destroy"), $.get(AppPath + "api/partyCases", { UserId: CurrentUser.Id, PartyId: e, Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (e) { null != e && e.length > 0 ? ($("#tblPartyCases").bootstrapTable({ data: e, striped: !0, columns: t, onPostBody: function () { return AfterBindPartyCases(), !1 } }), HideLoaderCenter()) : ($("#tblPartyCases").bootstrapTable({ data: [], striped: !0, columns: t }), HideLoaderCenter()) }).fail(function (e, t, a) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom učitavanja predmeta stranke. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() }) } function AfterBindPartyCases() { $("#tblPartyCases").find("tr").each(function (e, t) { if (0 == e) $(t).find("th:first-child").hide(); else { var a = parseInt($(t).find("td:first-child").html()); $(t).find("td:first-child").hide(), $(t).dblclick(function () { $("#modalParty").modal("toggle"), ShowLoaderCenter(), setTimeout(function () { Predmeti = null, EditCase(a), HideLoaderCenter() }, 1e3) }) } }) } function DeleteParty(e) { $(Lica).each(function (t, a) { if (a.Id == e) return ShowPrompt("Da li ste sigurni da želite izbrisati stranku?", "<span style='font-style: italic; color: gray;'>" + a.Naziv + "</span>", function () { ShowLoaderCenter(), $.ajax({ url: AppPath + "api/licedelete?Id=" + e.toString() + "&Token=" + CurrentUser.Token + "&ValidationEmail=" + CurrentUser.Email, type: "GET", success: function () { LoadParties(), HideLoaderCenter(), ShowAlert("success", "Uspješno izbrisana stranka.") }, error: function (e) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom brisanja lica. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() } }) }, function () { }), !1 }) } function StartBuildingNewCase() { (CurrentCase = {}).Parties = [], CurrentCase.Notes = [], CurrentCase.Expenses = [], CurrentCase.Radnje = [], CurrentCase.DeletedRadnje = [], CurrentCase.Documents = [], CurrentCase.Connections = [], ClearModalCase(!0), BindCaseParties([]), BindCaseNotes([]), BindCaseExpenses([]), BindCaseRadnje([]), BindCaseDocuments([]), BindCaseConnections([]) } function AppendPartyToCase() { if (-1 != $("#ddlCase_Lice").val() && -1 != $("#ddlCase_UlogaLica").val()) { var e = $("#btnAppendPartyToCase").attr("edit_index"); null != e && null != e ? (CurrentCase.Parties[e] = { LiceId: $("#ddlCase_Lice").val(), Lice: $("#ddlCase_Lice option:selected").text(), UlogaId: $("#ddlCase_UlogaLica").val(), Uloga: $("#ddlCase_UlogaLica option:selected").text(), GlavnaStranka: $("#ddlCase_GlavnaStranka option:selected").text(), IsNasaStranka: "ns" == $("#ddlCase_GlavnaStranka").val(), IsProtivnaStranka: "ps" == $("#ddlCase_GlavnaStranka").val(), Broj: $("#ddlCase_UlogaOrdinalNo").val(), Id: CurrentCase.Parties[e].Id }, $("#btnAppendPartyToCase").removeAttr("edit_index"), $("#btnAppendPartyToCase").html("Dodaj")) : (null == CurrentCase.Parties && (CurrentCase.Parties = []), CurrentCase.Parties.push({ LiceId: $("#ddlCase_Lice").val(), Lice: $("#ddlCase_Lice option:selected").text(), UlogaId: $("#ddlCase_UlogaLica").val(), Uloga: $("#ddlCase_UlogaLica option:selected").text(), GlavnaStranka: $("#ddlCase_GlavnaStranka option:selected").text(), IsNasaStranka: "ns" == $("#ddlCase_GlavnaStranka").val(), IsProtivnaStranka: "ps" == $("#ddlCase_GlavnaStranka").val(), Broj: $("#ddlCase_UlogaOrdinalNo").val() })), BindCaseParties(CurrentCase.Parties), $("#ddlCase_Lice").val(-1), $("#ddlCase_UlogaLica").val(-1), $("#ddlCase_UlogaOrdinalNo").val(""), $("#ddlCase_GlavnaStranka").val(""), $("#btnAppendPartyToCase").attr("disabled", "disabled") } } function BindCaseParties(e) { $("#tblCaseParties").bootstrapTable("destroy"), $("#tblCaseParties").bootstrapTable({ data: e, striped: !0, columns: [{ field: "Lice", title: "Stranka", titleTooltip: "Stranka", sortable: !0, class: "bold" }, { field: "Broj", title: "Broj", titleTooltip: "Broj", sortable: !0, width: "30px", align: "right" }, { field: "Uloga", title: "Uloga", titleTooltip: "Uloga", sortable: !0, width: "200px" }, { field: "GlavnaStranka", title: "Vrsta stranke", titleTooltip: "Vrsta stranke", sortable: !0, width: "120px" }], onPostBody: function () { return AfterBindCaseParties(), !1 } }) } function AfterBindCaseParties() { $("#tblCaseParties").find("tr").each(function (e, t) { if (0 == e) CurrentUser.UserGroupCodes.indexOf("office_admin") >= 0 && CurrentCase.Parties.length > 0 && 0 == $("#casePartiesEmptyHeader").length && $(t).append("<th id='casePartiesEmptyHeader'></th>"); else if (CurrentCase.Parties.length > 0) { var a = "<td style='width: 140px;'><div class='btn-group pull-right'>"; a += "<button class='btn btn-default btn-sm' data-toggle='tooltip' title='Otvori stranku' onclick='OpenCasePartyInNewTab(" + (e - 1) + "); return false;'><span class='glyphicon glyphicon-eye-open'></span></button>", CurrentUser.UserGroupCodes.indexOf("office_admin") >= 0 && (a += "<button class='btn btn-warning btn-sm' data-toggle='tooltip' title='Izmijeni stranku' onclick='EditCaseParty(" + (e - 1) + "); return false;'><span class='glyphicon glyphicon-pencil'></span></button>", a += "<button class='btn btn-default btn-sm custom-table-button-delete' data-toggle='tooltip' title='Izbriši stranku' onclick='DeleteCaseParty(" + (e - 1) + "); return false;'><span class='glyphicon glyphicon-remove'></span></button>"), a += "</div></td>", $(t).append(a) } }) } function EditCaseParty(e) { BindInputDataForCaseParty(CurrentCase.Parties[e]), $("#btnAppendPartyToCase").attr("edit_index", e), $("#btnAppendPartyToCase").html("Spasi") } function BindInputDataForCaseParty(e) { $("#ddlCase_Lice").val(e.LiceId), $("#ddlCase_UlogaLica").val(e.UlogaId), $("#ddlCase_UlogaOrdinalNo").val(e.Broj), !0 === e.IsNasaStranka ? $("#ddlCase_GlavnaStranka").val("ns") : !0 === e.IsProtivnaStranka ? $("#ddlCase_GlavnaStranka").val("ps") : $("#ddlCase_GlavnaStranka").val(""), $("#btnAppendPartyToCase").removeAttr("disabled") } function OpenCasePartyInNewTab(e) { var t = CurrentCase.Parties[e].LiceId; window.open(document.location.href.split("?")[0].toLowerCase() + "?module=parties&party_id=" + t.toString()) } function DeleteCaseParty(e) { CurrentCase.Parties.splice(e, 1), BindCaseParties(CurrentCase.Parties) } function AppendNoteToCase() { "" != $("#txtCase_NoteText").val() && "" != $("#txtCase_NoteDate").val() && (null == CurrentCase.Notes && (CurrentCase.Notes = []), CurrentCase.Notes.push({ NoteText: $("#txtCase_NoteText").val(), NoteDate: ConvertBSDateToUSDateString($("#txtCase_NoteDate").val()), CreatedBy: CurrentUser.Id, CreatedByName: CurrentUser.FirstName + " " + CurrentUser.LastName, CaseId: CurrentCase.Id }), BindCaseNotes(CurrentCase.Notes), ClearInputSectionNotes()) } function BindCaseNotes(e) { var t = [{ field: "NoteDate", title: "Datum", titleTooltip: "Datum", sortable: !0, sorter: DateSorterFunction, width: "150px" }, { field: "NoteText", title: "Bilješka", titleTooltip: "Bilješka", sortable: !0 }, { field: "CreatedByName", title: "Izrađena od", titleTooltip: "Izrađena od", sortable: !0, width: "150px" }]; $("#tblCaseNotes").bootstrapTable("destroy"), e && e.length > 0 ? $(e).each(function (a, n) { Date.parse(n.NoteDate) && (n.NoteDate = moment(n.NoteDate).format("DD.MM.YYYY")), a == e.length - 1 && ($("#tblCaseNotes").bootstrapTable({ data: e, striped: !0, columns: t, onPostBody: function () { return AfterBindCaseNotes(), !1 } }), $(CurrentCase.Notes).each(function (e, t) { null != t.NoteDate && (t.NoteDate = ConvertBSDateToUSDateString(t.NoteDate)) })) }) : $("#tblCaseNotes").bootstrapTable({ data: [], striped: !0, columns: t }) } function AfterBindCaseNotes() { $("#tblCaseNotes").find("tr").each(function (e, t) { if (0 == e) CurrentUser.UserGroupCodes.indexOf("office_admin") >= 0 && CurrentCase.Notes.length > 0 && 0 == $("#caseNotesEmptyHeader").length && $(t).append("<th id='caseNotesEmptyHeader'></th>"); else if (CurrentCase.Notes.length > 0 && CurrentUser.UserGroupCodes.indexOf("office_admin") >= 0) { var a = "<td style='width: 50px;'><div class='btn-group pull-right'>"; a += "<button class='btn btn-default btn-sm custom-table-button-delete' data-toggle='tooltip' title='Izbriši bilješku' onclick='DeleteCaseNote(" + (e - 1) + "); return false;'><span class='glyphicon glyphicon-remove'></span></button>", a += "</div></td>", $(t).append(a) } }) } function DeleteCaseNote(e) { CurrentCase.Notes.splice(e, 1), BindCaseNotes(CurrentCase.Notes) } function AppendConnectionToCase() { null != $("#txtCase_Connection_ConnectionCase").attr("caseId") && "" != $("#txtCase_Connection_ConnectionCase").attr("caseId") && (null == CurrentCase.Connections && (CurrentCase.Connections = []), CurrentCase.Connections.push({ ConnectionCaseId: $("#txtCase_Connection_ConnectionCase").attr("caseId"), ConnectionCaseName: $("#txtCase_Connection_ConnectionCase").val(), Note: $("#txtCase_Connection_Note").val(), CaseId: CurrentCase.Id }), BindCaseConnections(CurrentCase.Connections), ClearInputSectionConnections()) } function BindCaseConnections(e) { var t = [{ field: "ConnectionCaseName", title: "Veza prema predmetu", titleTooltip: "Veza prema predmetu", sortable: !0 }, { field: "Note", title: "Bilješke", titleTooltip: "Bilješke", sortable: !0 }]; $("#tblCaseConnections").bootstrapTable("destroy"), e && e.length > 0 ? $("#tblCaseConnections").bootstrapTable({ data: e, striped: !0, columns: t, escape: !1, onPostBody: function () { return AfterBindCaseConnections(), !1 } }) : $("#tblCaseConnections").bootstrapTable({ data: [], striped: !0, columns: t }) } function AfterBindCaseConnections() { $("#tblCaseConnections").find("tr").each(function (e, t) { if (0 == e) CurrentUser.UserGroupCodes.indexOf("office_admin") >= 0 && CurrentCase.Connections.length > 0 && 0 == $("#caseConnectionsEmptyHeader").length && $(t).append("<th id='caseConnectionsEmptyHeader'></th>"); else if (CurrentCase.Connections.length > 0 && CurrentUser.UserGroupCodes.indexOf("office_admin") >= 0) { var a = "<td style='width: 50px;'><div class='btn-group pull-right'>"; a += "<button class='btn btn-default btn-sm custom-table-button-delete' data-toggle='tooltip' title='Izbriši vezu' onclick='DeleteCaseConnection(" + (e - 1) + "); return false;'><span class='glyphicon glyphicon-remove'></span></button>", a += "</div></td>", $(t).append(a) } }) } function DeleteCaseConnection(e) { CurrentCase.Connections.splice(e, 1), BindCaseConnections(CurrentCase.Connections) } function AppendDocumentToCase() { if ("" != $("#txtCase_Document_TipDokumenta").val()) { var e = $("#btnAppendDocumentToCase").attr("edit_index"); null != e && null != e ? (CurrentCase.Documents[e] = { TipDokumentaName: $("#txtCase_Document_TipDokumenta").val(), PredatoUzDokumentName: $("#txtCase_Document_PredatoUz").val(), Note: $("#txtCase_Document_Note").val(), DocumentName: $("#aCase_Document_DocumentLink").html(), GoogleDriveDocId: $("#aCase_Document_DocumentLink").attr("google_drive_doc_id"), CaseId: CurrentCase.Id, Id: CurrentCase.Documents[e].Id }, $("#btnAppendDocumentToCase").removeAttr("edit_index"), $("#btnAppendDocumentToCase").html("Dodaj")) : (null == CurrentCase.Documents && (CurrentCase.Documents = []), CurrentCase.Documents.push({ TipDokumentaName: $("#txtCase_Document_TipDokumenta").val(), PredatoUzDokumentName: $("#txtCase_Document_PredatoUz").val(), Note: $("#txtCase_Document_Note").val(), DocumentName: $("#aCase_Document_DocumentLink").html(), GoogleDriveDocId: $("#aCase_Document_DocumentLink").attr("google_drive_doc_id"), CaseId: CurrentCase.Id })), BindCaseDocuments(CurrentCase.Documents), ClearInputSectionDocuments() } } function BindCaseDocuments(e) { var t = [{ field: "TipDokumentaName", title: "Tip dokumenta", titleTooltip: "Tip dokumenta", sortable: !0 }, { field: "Note", title: "Bilješke", titleTooltip: "Bilješke", sortable: !0 }, { field: "PredatoUzDokumentName", title: "Predato uz", titleTooltip: "Predato uz", sortable: !0 }, { field: "GoogleDriveDocIdHTML", title: "Dokument", titleTooltip: "Dokument", sortable: !1, align: "right", width: "150" }]; $("#tblCaseDocuments").bootstrapTable("destroy"), e && e.length > 0 ? $(e).each(function (a, n) { null != n.GoogleDriveDocId && null != n.GoogleDriveDocId && "none" != n.GoogleDriveDocId && "" != n.GoogleDriveDocId ? n.GoogleDriveDocIdHTML = DownloadButtonMarkUp.replace("##TOOLTIP##", n.DocumentName).replace("##ON_CLICK##", 'DownloadFileFromGoogleDrive("' + n.GoogleDriveDocId + '", "' + n.DocumentName + '");') : n.GoogleDriveDocIdHTML = "", a == e.length - 1 && $("#tblCaseDocuments").bootstrapTable({ data: e, striped: !0, columns: t, escape: !1, onPostBody: function () { return AfterBindCaseDocuments(), !1 } }) }) : $("#tblCaseDocuments").bootstrapTable({ data: [], striped: !0, columns: t }) } function AfterBindCaseDocuments() { $("#tblCaseDocuments").find("tr").each(function (e, t) { if (0 == e) CurrentUser.UserGroupCodes.indexOf("office_admin") >= 0 && CurrentCase.Documents.length > 0 && 0 == $("#caseDocumentsEmptyHeader").length && $(t).append("<th id='caseDocumentsEmptyHeader'></th>"), $(t).find("th:nth-child(4)").hide(); else if (CurrentCase.Documents.length > 0) { var a = "<td style='width: 200px;'><div class='btn-group pull-right'>", n = $(t).find("td:nth-child(4)").html(); $(t).find("td:nth-child(4)").hide(), a += n, CurrentUser.UserGroupCodes.indexOf("office_admin") >= 0 && (a += "<button class='btn btn-default btn-sm' data-toggle='tooltip' title='Kopiraj dokument (moguće ga je zalijepiti u drugi predmet)' onclick='CopyCaseDocument(" + (e - 1) + "); return false;'><span class='glyphicon glyphicon-copy'></span></button>", a += "<button class='btn btn-default btn-sm' data-toggle='tooltip' title='Iskoristi ponovo' onclick='ReuseCaseDocument(" + (e - 1) + "); return false;'><span class='glyphicon glyphicon-repeat'></span></button>", a += "<button class='btn btn-warning btn-sm' data-toggle='tooltip' title='Izmijeni dokument' onclick='EditCaseDocument(" + (e - 1) + "); return false;'><span class='glyphicon glyphicon-pencil'></span></button>", a += "<button class='btn btn-default btn-sm custom-table-button-delete' data-toggle='tooltip' title='Izbriši dokument' onclick='DeleteCaseDocument(" + (e - 1) + "); return false;'><span class='glyphicon glyphicon-remove'></span></button>"), a += "</div></td>", $(t).append(a) } }) } function EditCaseDocument(e) { BindInputDataForCaseDocument(CurrentCase.Documents[e]), $("#btnAppendDocumentToCase").attr("edit_index", e), $("#btnAppendDocumentToCase").html("Spasi") } function DeleteCaseDocument(e) { CurrentCase.Documents.splice(e, 1), BindCaseDocuments(CurrentCase.Documents) } function ReuseCaseDocument(e) { BindInputDataForCaseDocument(CurrentCase.Documents[e]) } function CopyCaseDocument(e) { CaseDocumentClipboard = $.extend(!0, [], CurrentCase.Documents[e]), $("#btnPasteCaseDocument").show() } function PasteCaseDocument(e) { null != CaseDocumentClipboard && BindInputDataForCaseDocument(CaseDocumentClipboard) } function BindInputDataForCaseDocument(e) { $("#ddlCase_Document_TipDokumenta").val(e.TipDokumentaId), $("#txtCase_Document_PredatoUz").val(e.PredatoUzDokumentName), $("#txtCase_Document_Note").val(e.Note), $("#aCase_Document_DocumentLink").html(e.DocumentName), $("#aCase_Document_DocumentLink").attr("google_drive_doc_id", e.GoogleDriveDocId), $("#btnCase_Document_RemoveGoogleDoc").show(), $("#btnAppendDocumentToCase").removeAttr("disabled") } function AppendRadnjaToCase() { if (-1 != $("#ddlCase_Radnja_VrstaRadnje").val() && "" != $("#txtCase_Radnja_DatumRadnje").val()) { var e = $("#btnAppendRadnjaToCase").attr("edit_index"); null != e && null != e ? (CurrentCase.Radnje[e] = { VrstaRadnjeId: $("#ddlCase_Radnja_VrstaRadnje").val(), VrstaRadnjeName: $("#ddlCase_Radnja_VrstaRadnje option:selected").text(), DatumRadnje: ConvertBSDateToUSDateString($("#txtCase_Radnja_DatumRadnje").val()), Troskovi: "", Biljeske: $("#txtCase_Radnja_Biljeske").val(), DocumentName: $("#aCase_Radnja_DocumentLink").html(), GoogleDriveDocId: $("#aCase_Radnja_DocumentLink").attr("google_drive_doc_id"), PredmetId: CurrentCase.Id, CaseFullName: CurrentCase.Naziv, UserId: CurrentUser.Id, CreateCalendarEvent: "true" == $("#ddlCase_Radnja_VrstaRadnje").find(":selected").attr("has_star") }, $("#btnAppendRadnjaToCase").removeAttr("edit_index"), $("#btnAppendRadnjaToCase").html("Dodaj")) : (null == CurrentCase.Radnje && (CurrentCase.Radnje = []), CurrentCase.Radnje.push({ VrstaRadnjeId: $("#ddlCase_Radnja_VrstaRadnje").val(), VrstaRadnjeName: $("#ddlCase_Radnja_VrstaRadnje option:selected").text(), DatumRadnje: ConvertBSDateToUSDateString($("#txtCase_Radnja_DatumRadnje").val()), Troskovi: "", Biljeske: $("#txtCase_Radnja_Biljeske").val(), DocumentName: $("#aCase_Radnja_DocumentLink").html(), GoogleDriveDocId: $("#aCase_Radnja_DocumentLink").attr("google_drive_doc_id"), PredmetId: CurrentCase.Id, CaseFullName: CurrentCase.Naziv, UserId: CurrentUser.Id, CreateCalendarEvent: "true" == $("#ddlCase_Radnja_VrstaRadnje").find(":selected").attr("has_star") })), BindCaseRadnje(CurrentCase.Radnje), ClearInputSectionRadnje() } } function BindCaseRadnje(e) { var t = [{ field: "VrstaRadnjeNameString", title: "Vrsta radnje", titleTooltip: "Vrsta radnje", sortable: !0, width: "600px" }, { field: "DatumRadnjeString", title: "Datum", titleTooltip: "Datum", sortable: !0, sorter: DateSorterFunction, width: "150px" }, { field: "Biljeske", title: "Bilješke", titleTooltip: "Bilješke", sortable: !0 }, { field: "GoogleDriveDocIdHTML", title: "Dokument", titleTooltip: "Dokument", sortable: !1, align: "right", width: "150" }]; $("#tblCaseRadnje").bootstrapTable("destroy"), e && e.length > 0 ? $(e).each(function (a, n) { Date.parse(n.DatumRadnje) && (n.DatumRadnjeString = moment(n.DatumRadnje).format("DD.MM.YYYY HH:mm"), n.DatumRadnjeString = n.DatumRadnjeString.replace(" 00:00", "")), null != n.GoogleDriveDocId && null != n.GoogleDriveDocId && "none" != n.GoogleDriveDocId && "" != n.GoogleDriveDocId ? n.GoogleDriveDocIdHTML = DownloadButtonMarkUp.replace("##TOOLTIP##", n.DocumentName).replace("##ON_CLICK##", 'DownloadFileFromGoogleDrive("' + n.GoogleDriveDocId + '", "' + n.DocumentName + '");') : n.GoogleDriveDocIdHTML = "", n.VrstaRadnjeNameString = n.VrstaRadnjeName.replace("*", ""), a == e.length - 1 && $("#tblCaseRadnje").bootstrapTable({ data: e, striped: !0, columns: t, escape: !1, onPostBody: function () { return AfterBindCaseRadnje(), !1 } }) }) : $("#tblCaseRadnje").bootstrapTable({ data: [], striped: !0, columns: t }) } function AfterBindCaseRadnje() { $("#tblCaseRadnje").find("tr").each(function (e, t) { if (0 == e) CurrentUser.UserGroupCodes.indexOf("office_admin") >= 0 && CurrentCase.Radnje.length > 0 && 0 == $("#caseRadnjeEmptyHeader").length && $(t).append("<th id='caseRadnjeEmptyHeader'></th>"), $(t).find("th:nth-child(4)").hide(); else if (CurrentCase.Radnje.length > 0) { var a = "<td style='width: 130px;'><div class='btn-group pull-right'>", n = $(t).find("td:nth-child(4)").html(); $(t).find("td:nth-child(4)").hide(), a += n, CurrentUser.UserGroupCodes.indexOf("office_admin") >= 0 && (a += "<button class='btn btn-warning btn-sm' data-toggle='tooltip' title='Izmijeni radnju' onclick='EditCaseRadnja(" + (e - 1) + "); return false;'><span class='glyphicon glyphicon-pencil'></span></button>", a += "<button class='btn btn-default btn-sm custom-table-button-delete' data-toggle='tooltip' title='Izbriši radnju' onclick='DeleteCaseRadnja(" + (e - 1) + "); return false;'><span class='glyphicon glyphicon-remove'></span></button>"), a += "</div></td>", $(t).append(a) } }) } function EditCaseRadnja(e) { BindInputDataForCaseRadnja(CurrentCase.Radnje[e]), $("#btnAppendRadnjaToCase").attr("edit_index", e), $("#btnAppendRadnjaToCase").html("Spasi") } function DeleteCaseRadnja(e) { null == CurrentCase.Radnje && (CurrentCase.Radnje = []), CurrentCase.DeletedRadnje.push(CurrentCase.Radnje[e]), CurrentCase.Radnje.splice(e, 1), BindCaseRadnje(CurrentCase.Radnje) } function BindInputDataForCaseRadnja(e) { $("#ddlCase_Radnja_VrstaRadnje").val(e.VrstaRadnjeId), $("#ddlCase_Radnja_VrstaRadnje option:selected").text(e.VrstaRadnjeName), $("#txtCase_Radnja_DatumRadnje").val(moment(e.DatumRadnje).format("DD.MM.YYYY HH:mm")), $("#txtCase_Radnja_Biljeske").val(e.Biljeske), $("#aCase_Radnja_DocumentLink").html(e.DocumentName), $("#aCase_Radnja_DocumentLink").attr("google_drive_doc_id", e.GoogleDriveDocId), null != e.GoogleDriveDocId && null != e.GoogleDriveDocId && "none" != e.GoogleDriveDocId && "" != e.GoogleDriveDocId && $("#btnCase_Radnja_RemoveGoogleDoc").show(), $("#btnAppendRadnjaToCase").removeAttr("disabled") } function AppendExpenseToCase() { if (-1 != $("#ddlCase_ExpenseVrstaTroska").val() && "" != $("#txtCase_ExpenseAmount").val()) { var e = $("#btnAppendExpenseToCase").attr("edit_index"); null != e && null != e ? (CurrentCase.Expenses[e] = { VrstaTroskaId: $("#ddlCase_ExpenseVrstaTroska").val(), VrstaTroskaName: $("#ddlCase_ExpenseVrstaTroska option:selected").text(), Amount: $("#txtCase_ExpenseAmount").attr("number_value"), ExpenseDate: ConvertBSDateToUSDateString($("#txtCase_ExpenseDate").val()), PaidBy: $("#ddlCase_ExpensePaidBy").val(), CaseId: CurrentCase.Id, Id: CurrentCase.Expenses[e].Id }, $("#btnAppendExpenseToCase").removeAttr("edit_index"), $("#btnAppendExpenseToCase").html("Dodaj")) : (null == CurrentCase.Expenses && (CurrentCase.Expenses = []), CurrentCase.Expenses.push({ VrstaTroskaId: $("#ddlCase_ExpenseVrstaTroska").val(), VrstaTroskaName: $("#ddlCase_ExpenseVrstaTroska option:selected").text(), Amount: $("#txtCase_ExpenseAmount").attr("number_value"), ExpenseDate: ConvertBSDateToUSDateString($("#txtCase_ExpenseDate").val()), PaidBy: $("#ddlCase_ExpensePaidBy").val(), CaseId: CurrentCase.Id })), BindCaseExpenses(CurrentCase.Expenses), ClearInputSectionExpenses() } } function BindCaseExpenses(e) { var t = [{ field: "VrstaTroskaName", title: "Vrsta troška", titleTooltip: "Vrsta troška", sortable: !0 }, { field: "AmountString", title: "Iznos (BAM)", titleTooltip: "Iznos (BAM)", sortable: !0, align: "right", width: "150px" }, { field: "ExpenseDate", title: "Datum plaćanja", titleTooltip: "Datum plaćanja", sortable: !0, sorter: DateSorterFunction, width: "120px" }, { field: "PaidBy", title: "Plaćeno od", titleTooltip: "Plaćeno od", sortable: !0, width: "100px" }]; $("#tblCaseExpenses").bootstrapTable("destroy"), e && e.length > 0 ? $(e).each(function (a, n) { Date.parse(n.ExpenseDate) && (n.ExpenseDate = moment(n.ExpenseDate).format("DD.MM.YYYY")), n.AmountString = GetMoneyFormat(n.Amount), a == e.length - 1 && ($("#tblCaseExpenses").bootstrapTable({ data: e, striped: !0, columns: t, onPostBody: function () { return AfterBindCaseExpenses(), !1 } }), $(CurrentCase.Expenses).each(function (e, t) { null != t.ExpenseDate && (t.ExpenseDate = ConvertBSDateToUSDateString(t.ExpenseDate)) })) }) : $("#tblCaseExpenses").bootstrapTable({ data: [], striped: !0, columns: t }) } function AfterBindCaseExpenses() { $("#tblCaseExpenses").find("tr").each(function (e, t) { if (0 == e) CurrentUser.UserGroupCodes.indexOf("office_admin") >= 0 && CurrentCase.Expenses.length > 0 && 0 == $("#caseExpensesEmptyHeader").length && $(t).append("<th id='caseExpensesEmptyHeader'></th>"); else if (CurrentCase.Expenses.length > 0 && CurrentUser.UserGroupCodes.indexOf("office_admin") >= 0) { var a = "<td style='width: 90px;'><div class='btn-group pull-right'>"; a += "<button class='btn btn-warning btn-sm' data-toggle='tooltip' title='Izmijeni trošak' onclick='EditCaseExpense(" + (e - 1) + "); return false;'><span class='glyphicon glyphicon-pencil'></span></button>", a += "<button class='btn btn-default btn-sm custom-table-button-delete' data-toggle='tooltip' title='Izbriši trošak' onclick='DeleteCaseExpense(" + (e - 1) + "); return false;'><span class='glyphicon glyphicon-remove'></span></button>", a += "</div></td>", $(t).append(a) } }) } function EditCaseExpense(e) { BindInputDataForCaseExpense(CurrentCase.Expenses[e]), $("#btnAppendExpenseToCase").attr("edit_index", e), $("#btnAppendExpenseToCase").html("Spasi") } function BindInputDataForCaseExpense(e) { $("#ddlCase_ExpenseVrstaTroska").val(e.VrstaTroskaId), $("#txtCase_ExpenseAmount").attr("number_value", e.Amount).val(GetMoneyFormat(e.Amount)), $("#txtCase_ExpenseDate").val(moment(e.ExpenseDate).format("DD.MM.YYYY")), $("#ddlCase_ExpensePaidBy").val(e.PaidBy), $("#btnAppendExpenseToCase").removeAttr("disabled") } function DeleteCaseExpense(e) { CurrentCase.Expenses.splice(e, 1), BindCaseExpenses(CurrentCase.Expenses) } function OpenOtherTab(e, t) { $(".other-tab").hide(), $("#" + t).show(), $("#ulOtherTabs").find("li").removeClass("active"), $(e).parent().addClass("active") } function SetUpStanjeAutocomplete() { $("#txtCase_StanjePredmeta").autocomplete({ source: function (e, t) { $("#spinner_txtCase_StanjePredmeta").show(), $.get(AppPath + "api/codetable", { Name: "StanjaPredmeta", ColumnName: "Name", Filter: $("#txtCase_StanjePredmeta").val(), Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (e) { t($.map(e, function (e) { return { label: e.Name, value: e.Name } })), $("#spinner_txtCase_StanjePredmeta").hide() }).fail(function (e, t, a) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom učitavanja stanja predmeta za odabir. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() }) }, delay: 500, appendTo: ".case-column-for-stanje" }) } function SetUpTipDokumentaAutocomplete() { $("#txtCase_Document_TipDokumenta").autocomplete({ source: function (e, t) { $("#spinner_txtCase_Document_TipDokumenta").show(), $.get(AppPath + "api/codetable", { Name: "TipoviDokumenata", ColumnName: "Name", Filter: $("#txtCase_Document_TipDokumenta").val(), Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (e) { t($.map(e, function (e) { return { label: e.Name, value: e.Name } })), $("#spinner_txtCase_Document_TipDokumenta").hide() }).fail(function (e, t, a) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom učitavanja tipova dokumenata za odabir. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() }) }, delay: 500, appendTo: "#divDokumenti" }) } function SetUpPredatoUzAutocomplete() { $("#txtCase_Document_PredatoUz").autocomplete({ source: function (e, t) { $("#spinner_txtCase_Document_PredatoUz").show(), $.get(AppPath + "api/codetable", { Name: "PredatoUzDokumenti", ColumnName: "Name", Filter: $("#txtCase_Document_PredatoUz").val(), Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (e) { t($.map(e, function (e) { return { label: e.Name, value: e.Name } })), $("#spinner_txtCase_Document_PredatoUz").hide() }).fail(function (e, t, a) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom učitavanja 'predato uz' podataka za odabir. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() }) }, delay: 500, appendTo: "#divDokumenti" }) } function SetUpCaseConnectionAutocomplete() { $("#txtCase_Connection_ConnectionCase").autocomplete({ source: function (e, t) { $("#spinner_txtCase_Connection_ConnectionCase").show(), $.get(AppPath + "api/codetable", { Name: "vCases", ColumnName: "Name", Filter: $("#txtCase_Connection_ConnectionCase").val(), Token: CurrentUser.Token, Email: CurrentUser.Email }).done(function (e) { t($.map(e, function (e) { return { label: e.Name, value: e.Name, caseId: e.Id } })), $("#spinner_txtCase_Connection_ConnectionCase").hide() }).fail(function (e, t, a) { 403 == e.status ? AlertUserSessionError() : ShowAlert("danger", "Greška prilikom učitavanja predmeta za dodavanje veza. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() }) }, delay: 500, appendTo: "#divVeze", select: function (e, t) { $("#txtCase_Connection_ConnectionCase").attr("caseId", t.item.caseId), null != $("#txtCase_Connection_ConnectionCase").attr("caseId") && "" != $("#txtCase_Connection_ConnectionCase").attr("caseId") ? $("#btnAppendConnectionToCase").removeAttr("disabled") : $("#btnAppendConnectionToCase").attr("disabled", "disabled") } }) } function BuildLabelsHTML(e, t, a, n) { var o = "<span name='spanContentLabels_" + t + "_" + a.toString() + "'>"; if (null != e && null != e && e.length > 0) for (var r = e.split(","), i = 0; i < r.length; i++)for (var s = 0; s < Labels.length; s++)if (Labels[s].Id == parseInt(r[i])) { o += "<span class='label' style='font-size:0.8em; margin:2px; cursor:pointer; background-color:" + Labels[s].BackgroundColor + ";color:" + Labels[s].FontColor + "' onclick='LoadCases(undefined, undefined, \"oznaka:" + Labels[s].Name + "\"); return false;'>" + Labels[s].Name + "&nbsp;&nbsp;<span data-toggle='tooltip' title='Izbriši oznaku' onclick='(function(e, element) { e.preventDefault(); e.stopPropagation(); DeleteLabelConnection(element," + r[i].toString() + ',"case",' + a.toString() + "); return false; })(event, this)' style='cursor:pointer; border-left:2px solid " + Labels[s].FontColor + "; font-weight:bold;'>&nbsp;&nbsp;X</span></span>" + (!0 === n ? "<span></span>" : "<br>"); break } return o += "</span>" } function LogOut() { CurrentModule = "home", CurrentUser = null, CurrentCodeTable = null, CurrentGoogleDocSelection = null, Sudovi = null, Labels = null, Lica = null, Predmeti = null, Users = null, CaseActivities = null, Radnje = null, CurrentCase = null, SelectedCases = [], CaseDocumentClipboard = null, menuCases_DataLoadingCounter = 0, DeactivateAllMenuItems(), $(".menu-item").hide(), $(".menu-div").hide(), ClearModalUser(), ClearModalLabel(), ClearModalSud(), ClearModalCase(), ClearModalParty(), $("#tblRadnje").bootstrapTable("destroy"), $("#tblCaseActivities").bootstrapTable("destroy"), $("#tblCases").bootstrapTable("destroy"), $("#tblParties").bootstrapTable("destroy"), $("#tblUsers").bootstrapTable("destroy"), $("#tblLabels").bootstrapTable("destroy"), $("#tblSudovi").bootstrapTable("destroy"), $("#tblCodeTableData").bootstrapTable("destroy"), $("#tblPartyCases").bootstrapTable("destroy"), $("#tblCaseParties").bootstrapTable("destroy"), $("#tblCaseNotes").bootstrapTable("destroy"), $("#tblCaseConnections").bootstrapTable("destroy"), $("#tblCaseDocuments").bootstrapTable("destroy"), $("#tblCaseRadnje").bootstrapTable("destroy"), $("#tblCaseExpenses").bootstrapTable("destroy"), $("#tblCasesSearch").bootstrapTable("destroy"), $("#divAdvancedSearchResults").hide(), $("#imgUserPicture").attr("title", "Slika korisnika").attr("alt", "Slika korisnika").attr("src", ""), $("#imgUserPicture").hide(), $("#btnLogOut").hide(), $("#divAll").hide(), $("#divGoogleSignIn").show(), $("#btnAppendDocumentToCase").removeAttr("edit_index"), $("#btnAppendDocumentToCase").html("Dodaj"), $("#btnAppendRadnjaToCase").removeAttr("edit_index"), $("#btnAppendRadnjaToCase").html("Dodaj") } function AlertUserSessionError() { ShowAlert("danger", "Greška - osvježite aplikaciju (F5) ili se ponovo prijavite.", !0) } function ExecuteAdvancedSearch(e) { ShowLoaderCenter(), 1 != e && (e = !1); var t = null; switch ($("#ddlCase_Search_PristupPredmetu").val()) { case "yes": t = !0; break; case "no": t = !1 }var a = { ExportToExcel: e, UserId: CurrentUser.Id, UserFullName: CurrentUser.FirstName + " " + CurrentUser.LastName, Token: CurrentUser.Token, Email: CurrentUser.Email, NasBroj: $("#txtCase_Search_NasBroj").val(), Kategorije: GetDataFromMultiselect("ddlCase_Search_Kategorija"), UlogeUPostupku: GetDataFromMultiselect("ddlCase_Search_Uloga"), BrojPredmeta: $("#txtCase_Search_BrojPredmeta").val(), BezBrojaPredmeta: $("#cbCase_Search_BezBrojaPredmeta").prop("checked"), Sudovi: GetDataFromMultiselect("ddlCase_Search_Sud"), Sudije: GetDataFromMultiselect("ddlCase_Search_Sudija"), VrijednostSporaFrom: $("#txtCase_Search_VrijednostSporaFrom").attr("number_value"), VrijednostSporaTo: $("#txtCase_Search_VrijednostSporaTo").attr("number_value"), VrstePredmeta: GetDataFromMultiselect("ddlCase_Search_VrstaPredmeta"), DatumStanjaPredmeta: "" == $("#txtCase_Search_DatumStanjaPredmeta").val() ? null : ConvertBSDateToUSDateString($("#txtCase_Search_DatumStanjaPredmeta").val()), StanjePredmeta: $("#txtCase_Search_StanjePredmeta").val(), Labels: GetDataFromMultiselect("ddlCase_Search_Labels"), IniciranFrom: $("#txtCase_Search_IniciranFrom").val(), IniciranTo: $("#txtCase_Search_IniciranTo").val(), ArhiviranFrom: $("#txtCase_Search_ArhiviranFrom").val(), ArhiviranTo: $("#txtCase_Search_ArhiviranTo").val(), UspjehFrom: $("#ddlCase_Search_UspjehFrom").val(), UspjehTo: $("#ddlCase_Search_UspjehTo").val(), PristupPredmetu: t, PravniOsnov: $("#txtCase_Search_PravniOsnov").val(), RowCount: $("#ddlAdvancedSearchRowCount").val() }; !0 !== e && ($("#tblCasesSearch").bootstrapTable("destroy"), $("#divAdvancedSearchResults").hide()), $.post(AppPath + "api/advancedSearch", a).done(function (t) { null != t && t.length > 0 ? !0 === e ? (document.getElementById("iframeDownload").src = document.location.href.split("?")[0].toLowerCase().replace("/desk.aspx", "") + "/Temp/" + CurrentUser.Id.toString() + "/" + t, HideLoaderCenter()) : $(t).each(function (e, a) { switch (Date.parse(a.Iniciran) && (a.Iniciran = moment(a.Iniciran).format("DD.MM.YYYY")), Date.parse(a.DatumStanjaPredmeta) && (a.DatumStanjaPredmeta = moment(a.DatumStanjaPredmeta).format("DD.MM.YYYY")), Date.parse(a.DatumArhiviranja) && (a.DatumArhiviranja = moment(a.DatumArhiviranja).format("DD.MM.YYYY")), null != a.VrijednostSpora && (a.VrijednostSporaString = GetMoneyFormat(a.VrijednostSpora)), a.PrivremeniZastupniciString = a.PrivremeniZastupnici ? "Da" : "Ne", a.PristupPredmetuString = a.PristupPredmetu ? "Da" : "Ne", a.NasBrojName = "<strong>" + a.NasBroj + "</strong>", null != Labels && (a.Labels = BuildLabelsHTML(a.LabelIds, "case", a.Id)), a.KategorijaPredmetaId) { case 5: a.KategorijaPredmetaName = "<span style='color: #00b6ee; font-weight: bold;'>" + a.KategorijaPredmetaName + "</span>"; break; case 7: a.KategorijaPredmetaName = "<span style='color: #ff0000; font-weight: bold;'>" + a.KategorijaPredmetaName + "</span>"; break; case 9: a.KategorijaPredmetaName = "<span style='color: #21b04b; font-weight: bold;'>" + a.KategorijaPredmetaName + "</span>"; break; default: a.KategorijaPredmetaName = "<span style='color: black; font-weight: bold;'>" + a.KategorijaPredmetaName + "</span>" }e == t.length - 1 && ($("#tblCasesSearch").bootstrapTable({ data: t, striped: !0, showColumns: !0, columns: $.extend(!0, [], _columnsCases).splice(2, 18), escape: !1, clickToSelect: !1 }), $("#divAdvancedSearchResults").show(), HideLoaderCenter()) }) : (!0 !== e && ($("#tblCasesSearch").bootstrapTable({ data: [], striped: !0, showColumns: !0, columns: $.extend(!0, [], _columnsCases).splice(2, 18), escape: !1 }), $("#divAdvancedSearchResults").show()), HideLoaderCenter()) }).fail(function (t) { 403 == jqXHR.status ? AlertUserSessionError() : !0 === e ? ShowAlert("danger", "Greška prilikom printanja u Excel tabelu. Probajte ponovo ili kontaktirajte administratora.") : ShowAlert("danger", "Greška prilikom napredne pretrage. Probajte ponovo ili kontaktirajte administratora."), HideLoaderCenter() }) } function PrintAdvancedSearchResults() { var e = document.getElementById("divAdvancedSearchResults_Printable"), t = window.open("", "Print-Window"); t.document.open(); t.document.write('<html><head><link rel="stylesheet" href="Libraries/Bootstrap/css/bootstrap.min.css" /><link rel="stylesheet" href="Libraries/Bootstrap/bootstrap-table/dist/bootstrap-table.min.css" /></head><body onload="window.print()">' + e.innerHTML + "</body></html>"), t.document.close(), setTimeout(function () { t.close() }, 10) } function ExportAdvancedSearchResults() { ExecuteAdvancedSearch(!0) } function ChooseGoogleDoc(e) { CurrentGoogleDocSelection = { Tip: e }, OpenPicker() } function RemoveGoogleDoc(e) { switch (CurrentGoogleDocSelection = null, e) { case "radnja": $("#aCase_Radnja_DocumentLink").html(""), $("#aCase_Radnja_DocumentLink").removeAttr("href"), $("#aCase_Radnja_DocumentLink").removeAttr("google_drive_doc_id"), $("#btnCase_Radnja_RemoveGoogleDoc").hide(); break; case "dokument": $("#aCase_Document_DocumentLink").html(""), $("#aCase_Document_DocumentLink").removeAttr("href"), $("#aCase_Document_DocumentLink").removeAttr("google_drive_doc_id"), $("#btnCase_Document_RemoveGoogleDoc").hide() } } function NasBrojSorterFunction(e, t) { return null != e && null != e || (e = 0), null != t && null != t || (t = 0), (e = parseFloat(e.replace("<strong>", "").replace("</strong>", ""))) == (t = parseFloat(t.replace("<strong>", "").replace("</strong>", ""))) ? 0 : e > t ? 1 : -1 } function SetMenuLocation() { if (window.innerWidth > 1e3) { var e = (window.innerWidth - $("#navBarMenuContainer").width()) / 2; $("#navBarMenuContainer").css("left", e.toString() + "px"), $("#strongNavBarHeader").show() } else window.innerWidth >= 768 ? ($("#navBarMenuContainer").css("left", "0"), $("#strongNavBarHeader").hide()) : $("#navBarMenuContainer").css("left", "0") } $("#ddlCase_Lice,#ddlCase_UlogaLica").change(function () { -1 != $("#ddlCase_Lice").val() && -1 != $("#ddlCase_UlogaLica").val() ? $("#btnAppendPartyToCase").removeAttr("disabled") : $("#btnAppendPartyToCase").attr("disabled", "disabled") }), $("#txtCase_NoteText,#txtCase_NoteDate").change(function () { "" != $("#txtCase_NoteText").val() && "" != $("#txtCase_NoteDate").val() ? $("#btnAppendNoteToCase").removeAttr("disabled") : $("#btnAppendNoteToCase").attr("disabled", "disabled") }), $("#ddlCase_ExpenseVrstaTroska").change(function () { -1 != $("#ddlCase_ExpenseVrstaTroska").val() && "" != $("#txtCase_ExpenseAmount").val() ? $("#btnAppendExpenseToCase").removeAttr("disabled") : $("#btnAppendExpenseToCase").attr("disabled", "disabled") }), $("#txtCase_ExpenseAmount").keyup(function () { -1 != $("#ddlCase_ExpenseVrstaTroska").val() && "" != $("#txtCase_ExpenseAmount").val() ? $("#btnAppendExpenseToCase").removeAttr("disabled") : $("#btnAppendExpenseToCase").attr("disabled", "disabled") }), $("#ddlCase_Radnja_VrstaRadnje").change(function () { -1 != $("#ddlCase_Radnja_VrstaRadnje").val() && "" != $("#txtCase_Radnja_DatumRadnje").val() ? $("#btnAppendRadnjaToCase").removeAttr("disabled") : $("#btnAppendRadnjaToCase").attr("disabled", "disabled") }), $("#dateTimePicker_Radnja_DatumRadnje").on("dp.change", function () { -1 != $("#ddlCase_Radnja_VrstaRadnje").val() && "" != $("#txtCase_Radnja_DatumRadnje").val() ? $("#btnAppendRadnjaToCase").removeAttr("disabled") : $("#btnAppendRadnjaToCase").attr("disabled", "disabled") }), $("#txtCase_Radnja_DatumRadnje").on("change", function () { -1 != $("#ddlCase_Radnja_VrstaRadnje").val() && "" != $("#txtCase_Radnja_DatumRadnje").val() ? $("#btnAppendRadnjaToCase").removeAttr("disabled") : $("#btnAppendRadnjaToCase").attr("disabled", "disabled") }), $("#txtCase_Document_TipDokumenta").keyup(function () { "" != $("#txtCase_Document_TipDokumenta").val() ? $("#btnAppendDocumentToCase").removeAttr("disabled") : $("#btnAppendDocumentToCase").attr("disabled", "disabled") }), $("#txtLabel_BackgroundColor").change(function () { $("#txtLabel_Name").css("background-color", $("#txtLabel_BackgroundColor").val()) }), $("#txtLabel_FontColor").change(function () { $("#txtLabel_Name").css("color", $("#txtLabel_FontColor").val()) }), $("#ddlLabels").change(function () { -1 != $("#ddlLabels").val() ? $("#btnApplyLabel").removeAttr("disabled") : $("#btnApplyLabel").attr("disabled", "disabled") }), $("#imgUserPicture").click(function () { $("#btnLogOut").toggle() }), $("#cbCase_Search_BezBrojaPredmeta").click(function () { 1 == $("#cbCase_Search_BezBrojaPredmeta").prop("checked") ? ($("#txtCase_Search_BrojPredmeta").val(""), $("#txtCase_Search_BrojPredmeta").attr("disabled", "disabled")) : $("#txtCase_Search_BrojPredmeta").removeAttr("disabled") }), $("#txtCase_VrijednostSpora,#txtCase_Search_VrijednostSporaFrom,#txtCase_Search_VrijednostSporaTo,#txtCase_ExpenseAmount").blur(function () { $(this).attr("number_value", parseFloat($(this).val().toString().replace(/,/g, "."))), $(this).val(GetMoneyFormat($(this).val())) }).focus(function () { $(this).val($(this).attr("number_value")) }), $("#cbCase_CaseActivity_SaveNew").change(function () { $(this).prop("checked") ? ($("#txtCase_CaseActivity_ActivityDate").removeAttr("disabled"), $("#txtCase_CaseActivity_Note").removeAttr("disabled"), $("#cbCase_CaseActivity_ForAllUsers").removeAttr("disabled"), $("#txtCase_CaseActivity_ActivityDaysOffset").removeAttr("disabled")) : ($("#txtCase_CaseActivity_ActivityDate").attr("disabled", "disabled"), $("#txtCase_CaseActivity_Note").attr("disabled", "disabled"), $("#cbCase_CaseActivity_ForAllUsers").attr("disabled", "disabled"), $("#txtCase_CaseActivity_ActivityDaysOffset").attr("disabled", "disabled")) }), $("#ddlCase_Kategorija").change(function () { switch (parseInt($(this).val())) { case 5: $(this).css("background-color", "#00b6ee"); break; case 8: $(this).css("background-color", "#ff0000"); break; case 10: $(this).css("background-color", "#21b04b"); break; default: $(this).css("background-color", "#ffffff") } }), $("#modalTemplate").on("hidden.bs.modal", function () { null != $("#modalCase").attr("edit_id") && ($("#modalCase").css("overflow-y", "scroll"), $("body").css("overflow", "hidden")) }), $("#modalCase").on("hidden.bs.modal", function () { $("body").css("overflow", "auto") }), $(window).resize(function () { SetMenuLocation() });